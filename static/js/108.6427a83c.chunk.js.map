{"version":3,"sources":["Components/Widgets/TrafficSources.js"],"names":["options","elements","point","radius","legend","display","labels","fontColor","ChartConfig","legendFontColor","scales","xAxes","gridLines","offsetGridLines","drawBorder","ticks","axesColor","yAxes","zeroLineColor","chartGridColor","stepSize","beginAtZero","padding","TrafficSourcesWidget","props","_jsxs","className","children","_jsx","IntlMessages","id","data","totalActiveUsers","Line","canvas","ctx","getContext","_stroke","stroke","save","shadowColor","shadowBlur","shadowOffsetX","shadowOffsetY","apply","this","arguments","restore","chartData","datasets","label","fill","tension","backgroundColor","color","info","borderColor","borderWidth","pointBorderWidth","hoverBackgroundColor","hoverBorderColor","height"],"mappings":"yGAAA,gDAUA,MAAMA,EAAU,CACZC,SAAU,CACNC,MAAO,CACHC,OAAQ,IAGhBC,OAAQ,CACJC,SAAS,EACTC,OAAQ,CACJC,UAAWC,IAAYC,kBAG/BC,OAAQ,CACJC,MAAO,CAAC,CACJC,UAAW,CACPC,iBAAiB,EACjBC,YAAY,GAEhBC,MAAO,CACHR,UAAWC,IAAYQ,UACvBX,SAAS,KAGjBY,MAAO,CAAC,CACJL,UAAW,CACPE,YAAY,EACZI,cAAeV,IAAYW,eAC3Bd,SAAS,GAEbU,MAAO,CACHR,UAAWC,IAAYQ,UACvBX,SAAS,EACTe,SAAU,GACVC,aAAa,EACbC,QAAS,QA8CVC,UAxCf,SAA8BC,GA+B3B,OACGC,eAAA,OAAKC,UAAU,mBAAkBC,SAAA,CAC3BC,cAAA,MAAIF,UAAU,aAAYC,SAACC,cAACC,IAAY,CAACC,GAAG,6BAC5CL,eAAA,QAAMC,UAAU,aAAYC,SAAA,CAAEH,EAAMO,KAAKC,iBAAiB,IAACJ,cAACC,IAAY,CAACC,GAAG,gCAC5EF,cAACK,IAAI,CAACF,KAlCDG,IACX,MAAMC,EAAMD,EAAOE,WAAW,MACxBC,EAAUF,EAAIG,OAUpB,OATAH,EAAIG,OAAS,WACPH,EAAII,OACJJ,EAAIK,YAAchC,IAAYgC,YAC9BL,EAAIM,WAAa,GACjBN,EAAIO,cAAgB,EACpBP,EAAIQ,cAAgB,GACpBN,EAAQO,MAAMC,KAAMC,WACpBX,EAAIY,SACV,EACO,CACDzC,OAAQkB,EAAMO,KAAKiB,UAAU1C,OAC7B2C,SAAU,CACP,CACGC,MAAO,UACPC,MAAM,EACNC,QAAS,EACTC,gBAAiB7C,IAAY8C,MAAMC,KACnCC,YAAahD,IAAY8C,MAAMC,KAC/BE,YAAa,EACbC,iBAAkB,EAClBC,qBAAsBnD,IAAY8C,MAAMC,KACxCK,iBAAkBpD,IAAY8C,MAAMC,KACpCxB,KAAMP,EAAMO,KAAKiB,UAAUjB,OAGtC,EAMuB/B,QAASA,EAAS6D,OAAQ,QAGxD,C","file":"static/js/108.6427a83c.chunk.js","sourcesContent":["/**\n * Traffic Sources Widget\n */\nimport React from 'react';\nimport { Line } from 'react-chartjs-2';\n// intl messages\nimport IntlMessages from 'Util/IntlMessages';\n// chart config file\nimport ChartConfig from 'Constants/chart-config';\n\nconst options = {\n    elements: {\n        point: {\n            radius: 0\n        }\n    },\n    legend: {\n        display: false,\n        labels: {\n            fontColor: ChartConfig.legendFontColor\n        }\n    },\n    scales: {\n        xAxes: [{\n            gridLines: {\n                offsetGridLines: true,\n                drawBorder: false\n            },\n            ticks: {\n                fontColor: ChartConfig.axesColor,\n                display: false\n            }\n        }],\n        yAxes: [{\n            gridLines: {\n                drawBorder: false,\n                zeroLineColor: ChartConfig.chartGridColor,\n                display: false\n            },\n            ticks: {\n                fontColor: ChartConfig.axesColor,\n                display: false,\n                stepSize: 60,\n                beginAtZero: true,\n                padding: 40\n            }\n        }]\n    }\n};\n\nfunction TrafficSourcesWidget(props) {\n   const data = (canvas) => {\n      const ctx = canvas.getContext(\"2d\");\n      const _stroke = ctx.stroke;\n      ctx.stroke = function () {\n            ctx.save();\n            ctx.shadowColor = ChartConfig.shadowColor;\n            ctx.shadowBlur = 13;\n            ctx.shadowOffsetX = 0;\n            ctx.shadowOffsetY = 12;\n            _stroke.apply(this, arguments);\n            ctx.restore();\n      };\n      return {\n            labels: props.data.chartData.labels,\n            datasets: [\n               {\n                  label: 'Traffic',\n                  fill: false,\n                  tension: 0,\n                  backgroundColor: ChartConfig.color.info,\n                  borderColor: ChartConfig.color.info,\n                  borderWidth: 3,\n                  pointBorderWidth: 0,\n                  hoverBackgroundColor: ChartConfig.color.info,\n                  hoverBorderColor: ChartConfig.color.info,\n                  data: props.data.chartData.data\n               }\n            ]\n      }\n   }\n   return (\n      <div className=\"card resource-mh\">\n            <h4 className=\"card-title\"><IntlMessages id=\"widgets.trafficSources\" /></h4>\n            <span className=\"fs-14 mb-4\">{props.data.totalActiveUsers} <IntlMessages id=\"widgets.totalActiveUsers\" /></span>\n            <Line data={data} options={options} height={110} />\n      </div>\n   );\n}\n\nexport default TrafficSourcesWidget;\n"],"sourceRoot":""}