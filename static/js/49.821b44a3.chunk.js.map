{"version":3,"sources":["Components/Charts/DynamicLineChart.js","Components/Widgets/BandWidthAreaChart.js"],"names":["options","legend","display","scales","xAxes","yAxes","initialState","labels","datasets","label","backgroundColor","borderColor","borderWidth","hoverBackgroundColor","hoverBorderColor","data","DynamicLineChart","Component","componentDidMount","this","setState","_this","timerFunction","setInterval","oldDataSet","state","newData","x","length","push","Math","floor","random","newDataSet","_objectSpread","newState","componentWillUnmount","clearInterval","render","_jsx","Fragment","children","Line","height","BandwidthAreaChart","_jsxs","RctCard","customClasses","className","IntlMessages","id","RctCardContent","noPadding"],"mappings":"iJAOA,MAAMA,EAAU,CACZC,OAAQ,CACJC,SAAS,GAEbC,OAAQ,CACJC,MAAO,CAAC,CACJF,SAAS,IAEbG,MAAO,CAAC,CACJH,SAAS,MAKfI,EAAe,CACjBC,OAAQ,CAAC,UAAW,WAAY,QAAS,QAAS,MAAO,OAAQ,QACjEC,SAAU,CACN,CACIC,MAAO,mBACPC,gBAAiB,wBACjBC,YAAa,sBACbC,YAAa,EACbC,qBAAsB,uBACtBC,iBAAkB,uBAClBC,KAAM,CAAC,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,OAK5B,MAAMC,UAAyBC,YAE1CC,oBACIC,KAAKC,SAASd,GAEd,IAAIe,EAAQF,KAEZA,KAAKG,cAAgBC,aAAY,WAI7B,IAHA,IAAIC,EAAaH,EAAMI,MAAMjB,SAAS,GAClCkB,EAAU,GAELC,EAAI,EAAGA,EAAIN,EAAMI,MAAMlB,OAAOqB,OAAQD,IAC3CD,EAAQG,KAAKC,KAAKC,MAAsB,IAAhBD,KAAKE,WAGjC,IAAIC,EAAUC,YAAA,GACPV,GAGPS,EAAWlB,KAAOW,EAElB,IAAIS,EAAQD,wBAAA,GACL5B,GAAY,IACfE,SAAU,CAACyB,KAGfZ,EAAMD,SAASe,EACnB,GAAG,KACP,CAEAC,uBACIC,cAAclB,KAAKG,cACvB,CAEAgB,SACI,OACIC,cAACC,WAAQ,CAAAC,SACJtB,KAAKM,OACFc,cAACG,IAAI,CAAC3B,KAAMI,KAAKM,MAAOzB,QAASA,EAAS2C,OAAQ,MAIlE,E,oBCpDWC,UAZYA,IACvBC,eAACC,IAAO,CAACC,cAAc,mCAAkCN,SAAA,CACrDI,eAAA,OAAKG,UAAU,OAAMP,SAAA,CACjBF,cAAA,MAAAE,SAAIF,cAACU,IAAY,CAACC,GAAG,2BACrBX,cAAA,MAAAE,SAAI,aAERF,cAACY,IAAc,CAACC,WAAS,EAAAX,SACrBF,cAACvB,EAAgB,Q","file":"static/js/49.821b44a3.chunk.js","sourcesContent":["/**\n * Dynamic Line Chart Component\n */\nimport React, { Component, Fragment } from 'react';\nimport { Line } from 'react-chartjs-2';\n\n// chart options\nconst options = {\n    legend: {\n        display: false\n    },\n    scales: {\n        xAxes: [{\n            display: false\n        }],\n        yAxes: [{\n            display: false\n        }]\n    }\n};\n\nconst initialState = {\n    labels: ['January', 'February', 'March', 'April', 'May', 'June', 'July'],\n    datasets: [\n        {\n            label: 'My First dataset',\n            backgroundColor: 'rgba(255,255,255,0.4)',\n            borderColor: 'rgba(255,255,255,1)',\n            borderWidth: 2,\n            hoverBackgroundColor: 'rgba(144,97,255,0.4)',\n            hoverBorderColor: 'rgba(144,97,255,0.4)',\n            data: [65, 59, 80, 81, 56, 55, 40]\n        }\n    ]\n};\n\nexport default class DynamicLineChart extends Component {\n\n    componentDidMount() {\n        this.setState(initialState);\n\n        var _this = this;\n\n        this.timerFunction = setInterval(function () {\n            var oldDataSet = _this.state.datasets[0];\n            var newData = [];\n\n            for (var x = 0; x < _this.state.labels.length; x++) {\n                newData.push(Math.floor(Math.random() * 100));\n            }\n\n            var newDataSet = {\n                ...oldDataSet\n            };\n\n            newDataSet.data = newData;\n\n            var newState = {\n                ...initialState,\n                datasets: [newDataSet]\n            };\n\n            _this.setState(newState);\n        }, 1500);\n    }\n\n    componentWillUnmount() {\n        clearInterval(this.timerFunction);\n    }\n\n    render() {\n        return (\n            <Fragment>\n                {this.state &&\n                    <Line data={this.state} options={options} height={90} />\n                }\n            </Fragment>\n        );\n    }\n}\n","/**\n * BandWidth Area Chart Widget\n */\nimport React from 'react';\n\n// dynamic line chart\nimport DynamicLineChart from 'Components/Charts/DynamicLineChart';\n\n// intl messages\nimport IntlMessages from 'Util/IntlMessages';\n\n// rct card box\nimport { RctCard, RctCardContent } from 'Components/RctCard';\n\nconst BandwidthAreaChart = () => (\n    <RctCard customClasses=\"gradient-primary overflow-hidden\">\n        <div className=\"p-20\">\n            <h2><IntlMessages id=\"widgets.bandwidthUse\" /></h2>\n            <h2>50 GB</h2>\n        </div>\n        <RctCardContent noPadding>\n            <DynamicLineChart />\n        </RctCardContent>\n    </RctCard>\n);\n\nexport default BandwidthAreaChart;\n"],"sourceRoot":""}