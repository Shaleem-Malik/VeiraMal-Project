{"version":3,"sources":["Components/Widgets/DiscoverPeoples.js"],"names":["DiscoverPeoplesWidget","props","people","setPeople","useState","useEffect","getDiscoverPeoples","api","get","then","response","data","catch","error","_jsx","List","children","map","key","ListItem","button","onClick","newPeople","update","status","$set","togglePeopleFollow","_jsxs","className","src","photo_url","alt","width","height","name","classnames"],"mappings":"wGAAA,qFAgEeA,UApDf,SAA+BC,GAC5B,MAAOC,EAAQC,GAAaC,mBAAS,MAErCC,qBAAU,KACPC,GAAoB,GACrB,IAGF,MAAMA,EAAqBA,KACxBC,IAAIC,IAAI,sBACJC,MAAMC,IACJP,EAAUO,EAASC,KAAK,IAE1BC,OAAMC,OAEL,EAYR,OACGC,cAACC,IAAI,CAAAC,SACDd,GAAUA,EAAOe,KAAI,CAACN,EAAMO,IAC1BJ,cAACK,IAAQ,CAACC,QAAM,EAAWC,QAASA,IARjBH,KACzB,IAAII,EAAYpB,EAChBC,EAAUoB,IAAOrB,EAAQ,CAAE,CAACgB,GAAM,CAAEM,OAAQ,CAAEC,MAAOH,EAAUJ,GAAKM,WAAc,EAMlCE,CAAmBR,GAAKF,SAC/DW,eAAA,OAAKC,UAAU,uCAAsCZ,SAAA,CAClDF,cAAA,OAAKc,UAAU,4BAA2BZ,SACvCW,eAAA,OAAKC,UAAU,QAAOZ,SAAA,CACnBF,cAAA,OAAKc,UAAU,mBAAkBZ,SAC9BF,cAAA,OAAKe,IAAKlB,EAAKmB,UAAWC,IAAI,eAAeH,UAAU,2BAA2BI,MAAM,KAAKC,OAAO,SAEvGnB,cAAA,OAAKc,UAAU,mBAAkBZ,SAC9BF,cAAA,KAAGc,UAAU,kBAAiBZ,SAAEL,EAAKuB,cAI9CpB,cAAA,OAAKc,UAAU,4BAA2BZ,SACvCF,cAAA,QAAMc,UAAWO,IAAW,4BAA6B,CAAE,aAAcxB,EAAKa,OAAQ,cAAeb,EAAKa,SAAUR,SAAEL,EAAKa,OAAS,YAAc,iBAbrIN,MAoBlC,C","file":"static/js/59.5b2d6096.chunk.js","sourcesContent":["/**\n * Discover Peoples\n */\nimport React, { useState, useEffect } from 'react';\nimport classnames from 'classnames';\nimport update from 'react-addons-update';\nimport List from '@material-ui/core/List';\nimport ListItem from '@material-ui/core/ListItem';\n\n// api\nimport api from 'Api';\n\nfunction DiscoverPeoplesWidget(props){\n   const [people, setPeople] = useState(null)\n\n   useEffect(() => {\n      getDiscoverPeoples();\n   },[])\n   \n   // get discover peoples\n   const getDiscoverPeoples = () => {\n      api.get('discoverPeoples.js')\n         .then((response) => {\n            setPeople(response.data)\n         })\n         .catch(error => {\n            // error handling\n         })\n   }\n\n   /**\n    * Function to follow and unfolow people\n    * @param {object} data\n    */\n   const togglePeopleFollow = (key) => {\n      let newPeople = people;\n      setPeople(update(people, { [key]: { status: { $set: !newPeople[key].status } } }))\n   }\n\n   return (\n      <List>\n         {people && people.map((data, key) => (\n            <ListItem button key={key} onClick={() => togglePeopleFollow(key)}>\n               <div className=\"d-flex justify-content-between w-100\">\n                  <div className=\"d-flex align-items-center\">\n                     <div className=\"media\">\n                        <div className=\"media-left mr-20\">\n                           <img src={data.photo_url} alt=\"user profile\" className=\"rounded-circle img-fluid\" width=\"55\" height=\"55\" />\n                        </div>\n                        <div className=\"media-body pt-15\">\n                           <p className=\"mb-0 text-muted\">{data.name}</p>\n                        </div>\n                     </div>\n                  </div>\n                  <div className=\"d-flex align-items-center\">\n                     <span className={classnames('badge badge-pill badge-lg', { 'badge-info': data.status, 'badge-dark': !data.status })}>{data.status ? 'Following' : 'Follow'}</span>\n                  </div>\n               </div>\n            </ListItem>\n         ))}\n      </List>\n   );\n}\n\nexport default DiscoverPeoplesWidget;\n"],"sourceRoot":""}