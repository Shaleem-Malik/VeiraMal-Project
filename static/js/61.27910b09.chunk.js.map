{"version":3,"sources":["Components/Widgets/EmployeePayroll.js"],"names":["EmployPayroll","employPayrollReload","setEmployPayrollReload","useState","employeePayroll","setEmployeePayroll","useEffect","getEmployeePayrolls","api","get","then","response","data","catch","error","console","log","_jsxs","Fragment","children","_jsx","RctSectionLoader","className","map","employee","key","src","employeeAvatar","alt","width","height","employeeName","designation","salary","status","Badge","color","IntlMessages","id","href","onClick","e","onCheckBoxClick","preventDefault","index","indexOf","setTimeout","update","$set","deleteEmployePayroll","$splice"],"mappings":"wGAAA,4EA4GeA,UA5Ff,WACG,MAAOC,EAAqBC,GAA0BC,oBAAS,IACxDC,EAAiBC,GAAsBF,mBAAS,MAEvDG,qBAAU,KACPC,GAAqB,GACtB,IAGJ,MAAMA,EAAsBA,KAC3BC,IAAIC,IAAI,sBACNC,MAAMC,IACNN,EAAmBM,EAASC,KAAK,IAEjCC,OAAMC,IACNC,QAAQC,IAAIF,EAAM,GACjB,EA0BF,OACGG,eAACC,WAAQ,CAAAC,SAAA,CACLlB,GACEmB,cAACC,IAAgB,IAEpBD,cAAA,OAAKE,UAAU,mBAAkBH,SAC9BF,eAAA,SAAOK,UAAU,sCAAqCH,SAAA,CACnDC,cAAA,SAAAD,SACGF,eAAA,MAAAE,SAAA,CACGC,cAAA,MAAAD,SAAI,SACJC,cAAA,MAAAD,SAAI,gBACJC,cAAA,MAAAD,SAAI,WACJC,cAAA,MAAAD,SAAI,WACJC,cAAA,MAAAD,SAAI,gBAGVC,cAAA,SAAAD,SACIf,GAAmBA,EAAgBmB,KAAI,CAACC,EAAUC,IAChDR,eAAA,MAAAE,SAAA,CACGC,cAAA,MAAAD,SACGF,eAAA,OAAKK,UAAU,QAAOH,SAAA,CACnBC,cAAA,OAAKE,UAAU,gCAA+BH,SAC3CC,cAAA,OAAKM,IAAKF,EAASG,eAAgBC,IAAI,eAAeN,UAAU,8BAA8BO,MAAM,KAAKC,OAAO,SAEnHV,cAAA,OAAKE,UAAU,mBAAkBH,SAC9BC,cAAA,MAAIE,UAAU,wBAAuBH,SAAEK,EAASO,sBAIzDX,cAAA,MAAAD,SAAKK,EAASQ,cACdf,eAAA,MAAAE,SAAA,CAAI,IAAEK,EAASS,UACfb,cAAA,MAAAD,SACwB,IAApBK,EAASU,OACPd,cAACe,IAAK,CAACC,MAAM,UAASjB,SAACC,cAACiB,IAAY,CAACC,GAAG,mBACtClB,cAACe,IAAK,CAACC,MAAM,UAASjB,SAACC,cAACiB,IAAY,CAACC,GAAG,wBAGhDrB,eAAA,MAAIK,UAAU,eAAcH,SAAA,CACJ,IAApBK,EAASU,QAAgBd,cAAA,KAAGmB,KAAK,KAAKC,QAAUC,GAjDnDC,EAACD,EAAGjB,KACvBiB,EAAEE,iBACFzC,GAAuB,GACvB,IAAI0C,EAAQxC,EAAgByC,QAAQrB,GACpCsB,YAAW,KACRzC,EAAmB0C,IAAO3C,EAAiB,CAAE,CAACwC,GAAQ,CAAEV,OAAQ,CAAEc,KAAM,OACxE9C,GAAuB,EAAM,GAC7B,KAAK,EA0CoEwC,CAAgBD,EAAGjB,GAAUL,SAACC,cAAA,KAAGE,UAAU,eAClGF,cAAA,KAAGmB,KAAK,KAAKC,QAAUC,GA7DpBQ,EAACR,EAAGjB,KAChCiB,EAAEE,iBACFzC,GAAuB,GACvB,IAAI0C,EAAQxC,EAAgByC,QAAQrB,GACpCsB,YAAW,KACVzC,EAAmB0C,IAAO3C,EAAiB,CAAE8C,QAAS,CAAC,CAACN,EAAO,OACzD1C,GAAuB,EAAM,GAC7B,KAAK,EAsD0C+C,CAAqBR,EAAGjB,GAAUL,SAACC,cAAA,KAAGE,UAAU,oBArB1EG,cA8B9B,C","file":"static/js/61.27910b09.chunk.js","sourcesContent":["/**\n * Employ Payroll\n */\nimport React, { Fragment, useState, useEffect } from 'react';\nimport update from 'react-addons-update';\nimport { Badge } from 'reactstrap';\n\n// api\nimport api from 'Api';\n\n// rct section loader\nimport RctSectionLoader from 'Components/RctSectionLoader/RctSectionLoader';\n\n// intl messages\nimport IntlMessages from 'Util/IntlMessages';\n\nfunction EmployPayroll() {\n   const [employPayrollReload, setEmployPayrollReload] = useState(false);\n   const [employeePayroll, setEmployeePayroll] = useState(null);\n\n   useEffect(() => {\n      getEmployeePayrolls();\n   },[])\n\n\t// get employee payrols\n\tconst getEmployeePayrolls = () => {\n\t\tapi.get('employeePayrols.js')\n\t\t\t.then((response) => {\n\t\t\t\tsetEmployeePayroll(response.data);\n\t\t\t})\n\t\t\t.catch(error => {\n\t\t\t\tconsole.log(error);\n\t\t\t})\n\t}\n\n\t// delete employee payroll\n\tconst deleteEmployePayroll = (e, employee) => {\n\t\te.preventDefault();\n\t\tsetEmployPayrollReload(true);\n\t\tlet index = employeePayroll.indexOf(employee);\n\t\tsetTimeout(() => {\n\t\t\tsetEmployeePayroll(update(employeePayroll, { $splice: [[index, 1]] }));\n         setEmployPayrollReload(false)\n      }, 1500);\n\t}\n\n\t// on check box click\n\tconst onCheckBoxClick = (e, employee) => {\n      e.preventDefault();\n      setEmployPayrollReload(true);\n      let index = employeePayroll.indexOf(employee);\n      setTimeout(() => {\n         setEmployeePayroll(update(employeePayroll, { [index]: { status: { $set: 1 } } }));\n         setEmployPayrollReload(false)\n      }, 1500);\n      \n   }\n   \n   return (\n      <Fragment>\n         {employPayrollReload &&\n            <RctSectionLoader />\n         }\n         <div className=\"table-responsive\">\n            <table className=\"table table-hover table-middle mb-0\">\n               <thead>\n                  <tr>\n                     <th>Name</th>\n                     <th>Designation</th>\n                     <th>Salary</th>\n                     <th>Status</th>\n                     <th>Action</th>\n                  </tr>\n               </thead>\n               <tbody>\n                  {employeePayroll && employeePayroll.map((employee, key) => (\n                     <tr key={key}>\n                        <td>\n                           <div className=\"media\">\n                              <div className=\"media-left media-middle mr-15\">\n                                 <img src={employee.employeeAvatar} alt=\"user profile\" className=\"media-object rounded-circle\" width=\"35\" height=\"35\" />\n                              </div>\n                              <div className=\"media-body pt-10\">\n                                 <h6 className=\"m-0 fw-bold text-dark\">{employee.employeeName}</h6>\n                              </div>\n                           </div>\n                        </td>\n                        <td>{employee.designation}</td>\n                        <td>${employee.salary}</td>\n                        <td>\n                           {employee.status === 1 ?\n                              <Badge color=\"primary\"><IntlMessages id=\"widgets.done\" /></Badge>\n                              : <Badge color=\"warning\"><IntlMessages id=\"widgets.pending\" /></Badge>\n                           }\n                        </td>\n                        <td className=\"table-action\">\n                           {employee.status === 0 && <a href=\"!#\" onClick={(e) => onCheckBoxClick(e, employee)}><i className=\"ti-check\"></i></a>}\n                           <a href=\"!#\" onClick={(e) => deleteEmployePayroll(e, employee)}><i className=\"ti-close\"></i></a>\n                        </td>\n                     </tr>\n                  ))}\n               </tbody>\n            </table>\n         </div>\n      </Fragment>\n   );\n}\n\nexport default EmployPayroll;\n"],"sourceRoot":""}