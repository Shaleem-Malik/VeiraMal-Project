{"version":3,"sources":["../node_modules/@material-ui/core/esm/internal/SwitchBase.js","../node_modules/@material-ui/core/esm/internal/svg-icons/CheckBoxOutlineBlank.js","../node_modules/@material-ui/core/esm/internal/svg-icons/CheckBox.js","../node_modules/@material-ui/core/esm/internal/svg-icons/IndeterminateCheckBox.js","../node_modules/@material-ui/core/esm/Checkbox/Checkbox.js","Components/Widgets/ActivityBoard.js","../node_modules/@material-ui/core/esm/FormControl/useFormControl.js","../node_modules/@material-ui/core/esm/FormControl/FormControlContext.js"],"names":["SwitchBase","React","props","ref","autoFocus","checkedProp","checked","checkedIcon","classes","className","defaultChecked","disabledProp","disabled","icon","id","inputProps","inputRef","name","onBlur","onChange","onFocus","readOnly","required","tabIndex","type","value","other","_objectWithoutProperties","_useControlled","useControlled","controlled","default","Boolean","state","_useControlled2","_slicedToArray","setCheckedState","muiFormControl","useFormControl","hasLabelFor","IconButton","_extends","component","clsx","root","role","undefined","event","input","newChecked","target","withStyles","padding","cursor","position","opacity","width","height","top","left","margin","zIndex","createSvgIcon","d","defaultCheckedIcon","CheckBoxIcon","defaultIcon","CheckBoxOutlineBlankIcon","defaultIndeterminateIcon","IndeterminateCheckBoxIcon","Checkbox","_props$checkedIcon","_props$color","color","_props$icon","iconProp","_props$indeterminate","indeterminate","_props$indeterminateI","indeterminateIcon","indeterminateIconProp","_props$size","size","concat","capitalize","fontSize","theme","palette","text","secondary","colorPrimary","primary","main","backgroundColor","alpha","action","hoverOpacity","colorSecondary","ActivityBoard","activityData","setActivityData","useState","sectionReload","setSectionReload","assetsData","setAssetsData","useEffect","getAssetstData","getChecklistData","api","get","then","response","data","catch","error","handleChange","task","selectedTaskIndex","indexOf","newState","update","completed","$set","setTimeout","_jsxs","children","_jsx","RctSectionLoader","Scrollbars","autoHeight","autoHeightMin","autoHeightMax","autoHide","IntlMessages","map","key","src","imageUrl","alt","href","onClick","e","preventDefault","Progress","List","ListItem","button","classnames","title","RctCardFooter","FormControlContext"],"mappings":"mLAkCIA,EAA0BC,cAAiB,SAAoBC,EAAOC,GACxE,IAAIC,EAAYF,EAAME,UAClBC,EAAcH,EAAMI,QACpBC,EAAcL,EAAMK,YACpBC,EAAUN,EAAMM,QAChBC,EAAYP,EAAMO,UAClBC,EAAiBR,EAAMQ,eACvBC,EAAeT,EAAMU,SACrBC,EAAOX,EAAMW,KACbC,EAAKZ,EAAMY,GACXC,EAAab,EAAMa,WACnBC,EAAWd,EAAMc,SACjBC,EAAOf,EAAMe,KACbC,EAAShB,EAAMgB,OACfC,EAAWjB,EAAMiB,SACjBC,EAAUlB,EAAMkB,QAChBC,EAAWnB,EAAMmB,SACjBC,EAAWpB,EAAMoB,SACjBC,EAAWrB,EAAMqB,SACjBC,EAAOtB,EAAMsB,KACbC,EAAQvB,EAAMuB,MACdC,EAAQC,YAAyBzB,EAAO,CAAC,YAAa,UAAW,cAAe,UAAW,YAAa,iBAAkB,WAAY,OAAQ,KAAM,aAAc,WAAY,OAAQ,SAAU,WAAY,UAAW,WAAY,WAAY,WAAY,OAAQ,UAEnQ0B,EAAiBC,YAAc,CACjCC,WAAYzB,EACZ0B,QAASC,QAAQtB,GACjBO,KAAM,aACNgB,MAAO,YAELC,EAAkBC,YAAeP,EAAgB,GACjDtB,EAAU4B,EAAgB,GAC1BE,EAAkBF,EAAgB,GAElCG,EAAiBC,cAgCjB1B,EAAWD,EAEX0B,GACsB,qBAAbzB,IACTA,EAAWyB,EAAezB,UAI9B,IAAI2B,EAAuB,aAATf,GAAgC,UAATA,EACzC,OAAoBvB,gBAAoBuC,IAAYC,YAAS,CAC3DC,UAAW,OACXjC,UAAWkC,YAAKnC,EAAQoC,KAAMnC,EAAWH,GAAWE,EAAQF,QAASM,GAAYJ,EAAQI,UACzFA,SAAUA,EACVW,SAAU,KACVsB,UAAMC,EACN1B,QA7CgB,SAAqB2B,GACjC3B,GACFA,EAAQ2B,GAGNV,GAAkBA,EAAejB,SACnCiB,EAAejB,QAAQ2B,EAE3B,EAsCE7B,OApCe,SAAoB6B,GAC/B7B,GACFA,EAAO6B,GAGLV,GAAkBA,EAAenB,QACnCmB,EAAenB,OAAO6B,EAE1B,EA6BE5C,IAAKA,GACJuB,GAAqBzB,gBAAoB,QAASwC,YAAS,CAC5DrC,UAAWA,EACXE,QAASD,EACTK,eAAgBA,EAChBD,UAAWD,EAAQwC,MACnBpC,SAAUA,EACVE,GAAIyB,GAAezB,EACnBG,KAAMA,EACNE,SApCsB,SAA2B4B,GACjD,IAAIE,EAAaF,EAAMG,OAAO5C,QAC9B8B,EAAgBa,GAEZ9B,GAEFA,EAAS4B,EAAOE,EAEpB,EA6BE5B,SAAUA,EACVlB,IAAKa,EACLM,SAAUA,EACVC,SAAUA,EACVC,KAAMA,EACNC,MAAOA,GACNV,IAAcT,EAAUC,EAAcM,EAC3C,IA6GesC,cAvOK,CAClBP,KAAM,CACJQ,QAAS,GAEX9C,QAAS,CAAC,EACVM,SAAU,CAAC,EACXoC,MAAO,CACLK,OAAQ,UACRC,SAAU,WACVC,QAAS,EACTC,MAAO,OACPC,OAAQ,OACRC,IAAK,EACLC,KAAM,EACNC,OAAQ,EACRR,QAAS,EACTS,OAAQ,IAuNsB,CAChC5C,KAAM,qBADOkC,CAEZnD,G,QC9OY8D,cAA4B7D,gBAAoB,OAAQ,CACrE8D,EAAG,+FACD,wBCFWD,cAA4B7D,gBAAoB,OAAQ,CACrE8D,EAAG,wIACD,Y,QCFWD,cAA4B7D,gBAAoB,OAAQ,CACrE8D,EAAG,kGACD,yB,QCwDAC,EAAkC/D,gBAAoBgE,EAAc,MACpEC,EAA2BjE,gBAAoBkE,EAA0B,MACzEC,EAAwCnE,gBAAoBoE,EAA2B,MACvFC,EAAwBrE,cAAiB,SAAkBC,EAAOC,GACpE,IAAIoE,EAAqBrE,EAAMK,YAC3BA,OAAqC,IAAvBgE,EAAgCP,EAAqBO,EACnE/D,EAAUN,EAAMM,QAChBgE,EAAetE,EAAMuE,MACrBA,OAAyB,IAAjBD,EAA0B,YAAcA,EAChDE,EAAcxE,EAAMW,KACpB8D,OAA2B,IAAhBD,EAAyBR,EAAcQ,EAClDE,EAAuB1E,EAAM2E,cAC7BA,OAAyC,IAAzBD,GAA0CA,EAC1DE,EAAwB5E,EAAM6E,kBAC9BC,OAAkD,IAA1BF,EAAmCV,EAA2BU,EACtF/D,EAAab,EAAMa,WACnBkE,EAAc/E,EAAMgF,KACpBA,OAAuB,IAAhBD,EAAyB,SAAWA,EAC3CvD,EAAQC,YAAyBzB,EAAO,CAAC,cAAe,UAAW,QAAS,OAAQ,gBAAiB,oBAAqB,aAAc,SAExIW,EAAOgE,EAAgBG,EAAwBL,EAC/CI,EAAoBF,EAAgBG,EAAwBzE,EAChE,OAAoBN,gBAAoBD,EAAYyC,YAAS,CAC3DjB,KAAM,WACNhB,QAAS,CACPoC,KAAMD,YAAKnC,EAAQoC,KAAMpC,EAAQ,QAAQ2E,OAAOC,YAAWX,KAAUI,GAAiBrE,EAAQqE,eAC9FvE,QAASE,EAAQF,QACjBM,SAAUJ,EAAQI,UAEpB6D,MAAOA,EACP1D,WAAY0B,YAAS,CACnB,qBAAsBoC,GACrB9D,GACHF,KAAmBZ,eAAmBY,EAAM,CAC1CwE,cAAkCvC,IAAxBjC,EAAKX,MAAMmF,UAAmC,UAATH,EAAmBA,EAAOrE,EAAKX,MAAMmF,WAEtF9E,YAA0BN,eAAmB8E,EAAmB,CAC9DM,cAA+CvC,IAArCiC,EAAkB7E,MAAMmF,UAAmC,UAATH,EAAmBA,EAAOH,EAAkB7E,MAAMmF,WAEhHlF,IAAKA,GACJuB,GACL,IAgGeyB,iBA5LK,SAAgBmC,GAClC,MAAO,CAEL1C,KAAM,CACJ6B,MAAOa,EAAMC,QAAQC,KAAKC,WAI5BnF,QAAS,CAAC,EAGVM,SAAU,CAAC,EAGXiE,cAAe,CAAC,EAGhBa,aAAc,CACZ,YAAa,CACXjB,MAAOa,EAAMC,QAAQI,QAAQC,KAC7B,UAAW,CACTC,gBAAiBC,YAAMR,EAAMC,QAAQI,QAAQC,KAAMN,EAAMC,QAAQQ,OAAOC,cAExE,uBAAwB,CACtBH,gBAAiB,iBAIvB,aAAc,CACZpB,MAAOa,EAAMC,QAAQQ,OAAOnF,WAKhCqF,eAAgB,CACd,YAAa,CACXxB,MAAOa,EAAMC,QAAQE,UAAUG,KAC/B,UAAW,CACTC,gBAAiBC,YAAMR,EAAMC,QAAQE,UAAUG,KAAMN,EAAMC,QAAQQ,OAAOC,cAE1E,uBAAwB,CACtBH,gBAAiB,iBAIvB,aAAc,CACZpB,MAAOa,EAAMC,QAAQQ,OAAOnF,WAIpC,GA0IkC,CAChCK,KAAM,eADOkC,CAEZmB,E,oCC3MH,yIAgJe4B,UA5Hf,WACG,MAAOC,EAAcC,GAAmBC,mBAAS,OAC1CC,EAAeC,GAAoBF,oBAAS,IAC5CG,EAAYC,GAAiBJ,mBAAS,MAE7CK,qBAAU,KACPC,IACAC,GAAkB,GACnB,IAIJ,MAAMD,EAAiBA,KAClBJ,GAAiB,GACrBM,IAAIC,IAAI,oBACNC,MAAMC,IACEP,EAAcO,EAASC,MACvBV,GAAiB,EAAM,IAC7BW,OAAMC,IACAV,EAAc,MACdF,GAAiB,EAAM,GAC9B,EAKEK,EAAmBA,KACpBL,GAAiB,GACrBM,IAAIC,IAAI,wBACNC,MAAMC,IACEZ,EAAgBY,EAASC,MACzBV,GAAiB,EAAM,IAC7BW,OAAMC,IACAf,EAAgB,MAChBG,GAAiB,EAAM,GAC9B,EAIEa,EAAeA,CAAC3F,EAAO4F,KAC5B,IAAIC,EAAoBnB,EAAaoB,QAAQF,GACrCG,EAAWC,IAAOtB,EAAc,CACtC,CAACmB,GAAoB,CACpBI,UAAW,CAAEC,KAAMlG,MAGlB8E,GAAiB,GACrBqB,YAAW,KACJxB,EAAgBoB,GAChBjB,GAAiB,EAAM,GAC3B,KAAK,EAIP,OACGsB,eAAA,OAAKpH,UAAU,yBAAwBqH,SAAA,CACnCxB,GACEyB,cAACC,IAAgB,IAEpBD,cAACE,aAAU,CAACxH,UAAU,aAAayH,YAAU,EAACC,cAAe,IAAKC,cAAe,IAAKC,UAAQ,EAAAP,SAC3FD,eAAA,MAAIpH,UAAU,qBAAoBqH,SAAA,CAC/BD,eAAA,MAAIpH,UAAU,gBAAeqH,SAAA,CAC1BC,cAAA,OAAKtH,UAAU,4CAA2CqH,SACvDC,cAAA,MAAItH,UAAU,OAAMqH,SAAC,wBAExBD,eAAA,OAAKpH,UAAU,2BAA0BqH,SAAA,CACtCC,cAAA,MAAItH,UAAU,OAAMqH,SAACC,cAACO,IAAY,CAACxH,GAAG,0BACtCiH,cAAA,OAAKtH,UAAU,mBAAkBqH,SAC9BC,cAAA,KAAGtH,UAAU,aAAYqH,SAAC,oOAM7BC,cAAA,MAAItH,UAAU,OAAMqH,SAAC,6BACrBC,cAAA,MAAItH,UAAU,mCAAkCqH,SAC5CtB,GAAcA,EAAW+B,KAAI,CAACtB,EAAMuB,IAClCX,eAAA,MAAcpH,UAAU,wDAAuDqH,SAAA,CAC5EC,cAAA,OAAKU,IAAKxB,EAAKyB,SAAUjI,UAAU,6BAA6BkI,IAAI,QACpEZ,cAAA,OAAKtH,UAAU,kBAAiBqH,SAC7BC,cAAA,KAAGa,KAAK,KAAKC,QAASC,GAAKA,EAAEC,iBAAkBtI,UAAU,4EAA2EqH,SACjIC,cAAA,KAAGtH,UAAU,6BAJb+H,aAYrBX,eAAA,MAAAC,SAAA,CACGC,cAAA,OAAKtH,UAAU,4CAA2CqH,SACvDC,cAAA,MAAItH,UAAU,OAAMqH,SAACC,cAACO,IAAY,CAACxH,GAAG,0BAEzC+G,eAAA,OAAKpH,UAAU,MAAKqH,SAAA,CACjBC,cAACiB,IAAQ,CAACvE,MAAM,UAAUhE,UAAU,OAAOgB,MAAM,KAAIqG,SAAC,kBACtDC,cAACkB,IAAI,CAACxI,UAAU,MAAKqH,SACjB3B,GAAgBA,EAAaoC,KAAI,CAAClB,EAAMmB,IACtCT,cAACmB,IAAQ,CAAWL,QAAUC,GAAM1B,GAAcC,EAAKK,UAAWL,GAAO8B,QAAM,EAAC1I,UAAU,MAAKqH,SAC5FD,eAAA,OAAKpH,UAAW2I,IAAW,6BAA8B,CAAE,OAAU/B,EAAKK,YAAaI,SAAA,CACpFC,cAACzD,IAAQ,CACNG,MAAM,UACNnE,QAAS+G,EAAKK,UACdjH,UAAU,SACVU,SAAW2H,GAAM1B,EAAa0B,EAAE5F,OAAO5C,QAAS+G,KAEnDU,cAAA,KAAGtH,UAAU,OAAMqH,SAAET,EAAKgC,YARjBb,kBAiBjCT,cAACuB,IAAa,CAAC7I,UAAU,WAAUqH,SAChCD,eAAA,QAAMpH,UAAU,kBAAiBqH,SAAA,CAC9BC,cAAA,KAAGtH,UAAU,4BACbsH,cAACO,IAAY,CAACxH,GAAG,mCAKhC,C,mCC9IA,sDAEe,SAASwB,IACtB,OAAOrC,aAAiBsJ,IAC1B,C,mCCJA,6CAKIA,EAAqBtJ,kBAMlB,SAASqC,IACd,OAAOrC,aAAiBsJ,EAC1B,CACeA,K","file":"static/js/25.68f91c7b.chunk.js","sourcesContent":["import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _slicedToArray from \"@babel/runtime/helpers/esm/slicedToArray\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { refType } from '@material-ui/utils';\nimport useControlled from '../utils/useControlled';\nimport useFormControl from '../FormControl/useFormControl';\nimport withStyles from '../styles/withStyles';\nimport IconButton from '../IconButton';\nexport var styles = {\n  root: {\n    padding: 9\n  },\n  checked: {},\n  disabled: {},\n  input: {\n    cursor: 'inherit',\n    position: 'absolute',\n    opacity: 0,\n    width: '100%',\n    height: '100%',\n    top: 0,\n    left: 0,\n    margin: 0,\n    padding: 0,\n    zIndex: 1\n  }\n};\n/**\n * @ignore - internal component.\n */\n\nvar SwitchBase = /*#__PURE__*/React.forwardRef(function SwitchBase(props, ref) {\n  var autoFocus = props.autoFocus,\n      checkedProp = props.checked,\n      checkedIcon = props.checkedIcon,\n      classes = props.classes,\n      className = props.className,\n      defaultChecked = props.defaultChecked,\n      disabledProp = props.disabled,\n      icon = props.icon,\n      id = props.id,\n      inputProps = props.inputProps,\n      inputRef = props.inputRef,\n      name = props.name,\n      onBlur = props.onBlur,\n      onChange = props.onChange,\n      onFocus = props.onFocus,\n      readOnly = props.readOnly,\n      required = props.required,\n      tabIndex = props.tabIndex,\n      type = props.type,\n      value = props.value,\n      other = _objectWithoutProperties(props, [\"autoFocus\", \"checked\", \"checkedIcon\", \"classes\", \"className\", \"defaultChecked\", \"disabled\", \"icon\", \"id\", \"inputProps\", \"inputRef\", \"name\", \"onBlur\", \"onChange\", \"onFocus\", \"readOnly\", \"required\", \"tabIndex\", \"type\", \"value\"]);\n\n  var _useControlled = useControlled({\n    controlled: checkedProp,\n    default: Boolean(defaultChecked),\n    name: 'SwitchBase',\n    state: 'checked'\n  }),\n      _useControlled2 = _slicedToArray(_useControlled, 2),\n      checked = _useControlled2[0],\n      setCheckedState = _useControlled2[1];\n\n  var muiFormControl = useFormControl();\n\n  var handleFocus = function handleFocus(event) {\n    if (onFocus) {\n      onFocus(event);\n    }\n\n    if (muiFormControl && muiFormControl.onFocus) {\n      muiFormControl.onFocus(event);\n    }\n  };\n\n  var handleBlur = function handleBlur(event) {\n    if (onBlur) {\n      onBlur(event);\n    }\n\n    if (muiFormControl && muiFormControl.onBlur) {\n      muiFormControl.onBlur(event);\n    }\n  };\n\n  var handleInputChange = function handleInputChange(event) {\n    var newChecked = event.target.checked;\n    setCheckedState(newChecked);\n\n    if (onChange) {\n      // TODO v5: remove the second argument.\n      onChange(event, newChecked);\n    }\n  };\n\n  var disabled = disabledProp;\n\n  if (muiFormControl) {\n    if (typeof disabled === 'undefined') {\n      disabled = muiFormControl.disabled;\n    }\n  }\n\n  var hasLabelFor = type === 'checkbox' || type === 'radio';\n  return /*#__PURE__*/React.createElement(IconButton, _extends({\n    component: \"span\",\n    className: clsx(classes.root, className, checked && classes.checked, disabled && classes.disabled),\n    disabled: disabled,\n    tabIndex: null,\n    role: undefined,\n    onFocus: handleFocus,\n    onBlur: handleBlur,\n    ref: ref\n  }, other), /*#__PURE__*/React.createElement(\"input\", _extends({\n    autoFocus: autoFocus,\n    checked: checkedProp,\n    defaultChecked: defaultChecked,\n    className: classes.input,\n    disabled: disabled,\n    id: hasLabelFor && id,\n    name: name,\n    onChange: handleInputChange,\n    readOnly: readOnly,\n    ref: inputRef,\n    required: required,\n    tabIndex: tabIndex,\n    type: type,\n    value: value\n  }, inputProps)), checked ? checkedIcon : icon);\n}); // NB: If changed, please update Checkbox, Switch and Radio\n// so that the API documentation is updated.\n\nprocess.env.NODE_ENV !== \"production\" ? SwitchBase.propTypes = {\n  /**\n   * If `true`, the `input` element will be focused during the first mount.\n   */\n  autoFocus: PropTypes.bool,\n\n  /**\n   * If `true`, the component is checked.\n   */\n  checked: PropTypes.bool,\n\n  /**\n   * The icon to display when the component is checked.\n   */\n  checkedIcon: PropTypes.node.isRequired,\n\n  /**\n   * Override or extend the styles applied to the component.\n   * See [CSS API](#css) below for more details.\n   */\n  classes: PropTypes.object.isRequired,\n\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n\n  /**\n   * @ignore\n   */\n  defaultChecked: PropTypes.bool,\n\n  /**\n   * If `true`, the switch will be disabled.\n   */\n  disabled: PropTypes.bool,\n\n  /**\n   * The icon to display when the component is unchecked.\n   */\n  icon: PropTypes.node.isRequired,\n\n  /**\n   * The id of the `input` element.\n   */\n  id: PropTypes.string,\n\n  /**\n   * [Attributes](https://developer.mozilla.org/en-US/docs/Web/HTML/Element/input#Attributes) applied to the `input` element.\n   */\n  inputProps: PropTypes.object,\n\n  /**\n   * Pass a ref to the `input` element.\n   */\n  inputRef: refType,\n\n  /*\n   * @ignore\n   */\n  name: PropTypes.string,\n\n  /**\n   * @ignore\n   */\n  onBlur: PropTypes.func,\n\n  /**\n   * Callback fired when the state is changed.\n   *\n   * @param {object} event The event source of the callback.\n   * You can pull out the new checked state by accessing `event.target.checked` (boolean).\n   */\n  onChange: PropTypes.func,\n\n  /**\n   * @ignore\n   */\n  onFocus: PropTypes.func,\n\n  /**\n   * It prevents the user from changing the value of the field\n   * (not from interacting with the field).\n   */\n  readOnly: PropTypes.bool,\n\n  /**\n   * If `true`, the `input` element will be required.\n   */\n  required: PropTypes.bool,\n\n  /**\n   * @ignore\n   */\n  tabIndex: PropTypes.oneOfType([PropTypes.number, PropTypes.string]),\n\n  /**\n   * The input component prop `type`.\n   */\n  type: PropTypes.string.isRequired,\n\n  /**\n   * The value of the component.\n   */\n  value: PropTypes.any\n} : void 0;\nexport default withStyles(styles, {\n  name: 'PrivateSwitchBase'\n})(SwitchBase);","import * as React from 'react';\nimport createSvgIcon from '../../utils/createSvgIcon';\n/**\n * @ignore - internal component.\n */\n\nexport default createSvgIcon( /*#__PURE__*/React.createElement(\"path\", {\n  d: \"M19 5v14H5V5h14m0-2H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2z\"\n}), 'CheckBoxOutlineBlank');","import * as React from 'react';\nimport createSvgIcon from '../../utils/createSvgIcon';\n/**\n * @ignore - internal component.\n */\n\nexport default createSvgIcon( /*#__PURE__*/React.createElement(\"path\", {\n  d: \"M19 3H5c-1.11 0-2 .9-2 2v14c0 1.1.89 2 2 2h14c1.11 0 2-.9 2-2V5c0-1.1-.89-2-2-2zm-9 14l-5-5 1.41-1.41L10 14.17l7.59-7.59L19 8l-9 9z\"\n}), 'CheckBox');","import * as React from 'react';\nimport createSvgIcon from '../../utils/createSvgIcon';\n/**\n * @ignore - internal component.\n */\n\nexport default createSvgIcon( /*#__PURE__*/React.createElement(\"path\", {\n  d: \"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zm-2 10H7v-2h10v2z\"\n}), 'IndeterminateCheckBox');","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { refType } from '@material-ui/utils';\nimport SwitchBase from '../internal/SwitchBase';\nimport CheckBoxOutlineBlankIcon from '../internal/svg-icons/CheckBoxOutlineBlank';\nimport CheckBoxIcon from '../internal/svg-icons/CheckBox';\nimport { alpha } from '../styles/colorManipulator';\nimport IndeterminateCheckBoxIcon from '../internal/svg-icons/IndeterminateCheckBox';\nimport capitalize from '../utils/capitalize';\nimport withStyles from '../styles/withStyles';\nexport var styles = function styles(theme) {\n  return {\n    /* Styles applied to the root element. */\n    root: {\n      color: theme.palette.text.secondary\n    },\n\n    /* Pseudo-class applied to the root element if `checked={true}`. */\n    checked: {},\n\n    /* Pseudo-class applied to the root element if `disabled={true}`. */\n    disabled: {},\n\n    /* Pseudo-class applied to the root element if `indeterminate={true}`. */\n    indeterminate: {},\n\n    /* Styles applied to the root element if `color=\"primary\"`. */\n    colorPrimary: {\n      '&$checked': {\n        color: theme.palette.primary.main,\n        '&:hover': {\n          backgroundColor: alpha(theme.palette.primary.main, theme.palette.action.hoverOpacity),\n          // Reset on touch devices, it doesn't add specificity\n          '@media (hover: none)': {\n            backgroundColor: 'transparent'\n          }\n        }\n      },\n      '&$disabled': {\n        color: theme.palette.action.disabled\n      }\n    },\n\n    /* Styles applied to the root element if `color=\"secondary\"`. */\n    colorSecondary: {\n      '&$checked': {\n        color: theme.palette.secondary.main,\n        '&:hover': {\n          backgroundColor: alpha(theme.palette.secondary.main, theme.palette.action.hoverOpacity),\n          // Reset on touch devices, it doesn't add specificity\n          '@media (hover: none)': {\n            backgroundColor: 'transparent'\n          }\n        }\n      },\n      '&$disabled': {\n        color: theme.palette.action.disabled\n      }\n    }\n  };\n};\nvar defaultCheckedIcon = /*#__PURE__*/React.createElement(CheckBoxIcon, null);\nvar defaultIcon = /*#__PURE__*/React.createElement(CheckBoxOutlineBlankIcon, null);\nvar defaultIndeterminateIcon = /*#__PURE__*/React.createElement(IndeterminateCheckBoxIcon, null);\nvar Checkbox = /*#__PURE__*/React.forwardRef(function Checkbox(props, ref) {\n  var _props$checkedIcon = props.checkedIcon,\n      checkedIcon = _props$checkedIcon === void 0 ? defaultCheckedIcon : _props$checkedIcon,\n      classes = props.classes,\n      _props$color = props.color,\n      color = _props$color === void 0 ? 'secondary' : _props$color,\n      _props$icon = props.icon,\n      iconProp = _props$icon === void 0 ? defaultIcon : _props$icon,\n      _props$indeterminate = props.indeterminate,\n      indeterminate = _props$indeterminate === void 0 ? false : _props$indeterminate,\n      _props$indeterminateI = props.indeterminateIcon,\n      indeterminateIconProp = _props$indeterminateI === void 0 ? defaultIndeterminateIcon : _props$indeterminateI,\n      inputProps = props.inputProps,\n      _props$size = props.size,\n      size = _props$size === void 0 ? 'medium' : _props$size,\n      other = _objectWithoutProperties(props, [\"checkedIcon\", \"classes\", \"color\", \"icon\", \"indeterminate\", \"indeterminateIcon\", \"inputProps\", \"size\"]);\n\n  var icon = indeterminate ? indeterminateIconProp : iconProp;\n  var indeterminateIcon = indeterminate ? indeterminateIconProp : checkedIcon;\n  return /*#__PURE__*/React.createElement(SwitchBase, _extends({\n    type: \"checkbox\",\n    classes: {\n      root: clsx(classes.root, classes[\"color\".concat(capitalize(color))], indeterminate && classes.indeterminate),\n      checked: classes.checked,\n      disabled: classes.disabled\n    },\n    color: color,\n    inputProps: _extends({\n      'data-indeterminate': indeterminate\n    }, inputProps),\n    icon: /*#__PURE__*/React.cloneElement(icon, {\n      fontSize: icon.props.fontSize === undefined && size === \"small\" ? size : icon.props.fontSize\n    }),\n    checkedIcon: /*#__PURE__*/React.cloneElement(indeterminateIcon, {\n      fontSize: indeterminateIcon.props.fontSize === undefined && size === \"small\" ? size : indeterminateIcon.props.fontSize\n    }),\n    ref: ref\n  }, other));\n});\nprocess.env.NODE_ENV !== \"production\" ? Checkbox.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\n  // ----------------------------------------------------------------------\n\n  /**\n   * If `true`, the component is checked.\n   */\n  checked: PropTypes.bool,\n\n  /**\n   * The icon to display when the component is checked.\n   */\n  checkedIcon: PropTypes.node,\n\n  /**\n   * Override or extend the styles applied to the component.\n   * See [CSS API](#css) below for more details.\n   */\n  classes: PropTypes.object,\n\n  /**\n   * The color of the component. It supports those theme colors that make sense for this component.\n   */\n  color: PropTypes.oneOf(['default', 'primary', 'secondary']),\n\n  /**\n   * If `true`, the checkbox will be disabled.\n   */\n  disabled: PropTypes.bool,\n\n  /**\n   * If `true`, the ripple effect will be disabled.\n   */\n  disableRipple: PropTypes.bool,\n\n  /**\n   * The icon to display when the component is unchecked.\n   */\n  icon: PropTypes.node,\n\n  /**\n   * The id of the `input` element.\n   */\n  id: PropTypes.string,\n\n  /**\n   * If `true`, the component appears indeterminate.\n   * This does not set the native input element to indeterminate due\n   * to inconsistent behavior across browsers.\n   * However, we set a `data-indeterminate` attribute on the input.\n   */\n  indeterminate: PropTypes.bool,\n\n  /**\n   * The icon to display when the component is indeterminate.\n   */\n  indeterminateIcon: PropTypes.node,\n\n  /**\n   * [Attributes](https://developer.mozilla.org/en-US/docs/Web/HTML/Element/input#Attributes) applied to the `input` element.\n   */\n  inputProps: PropTypes.object,\n\n  /**\n   * Pass a ref to the `input` element.\n   */\n  inputRef: refType,\n\n  /**\n   * Callback fired when the state is changed.\n   *\n   * @param {object} event The event source of the callback.\n   * You can pull out the new checked state by accessing `event.target.checked` (boolean).\n   */\n  onChange: PropTypes.func,\n\n  /**\n   * If `true`, the `input` element will be required.\n   */\n  required: PropTypes.bool,\n\n  /**\n   * The size of the checkbox.\n   * `small` is equivalent to the dense checkbox styling.\n   */\n  size: PropTypes.oneOf(['medium', 'small']),\n\n  /**\n   * The value of the component. The DOM API casts this to a string.\n   * The browser uses \"on\" as the default value.\n   */\n  value: PropTypes.any\n} : void 0;\nexport default withStyles(styles, {\n  name: 'MuiCheckbox'\n})(Checkbox);","/**\n * Activity Board\n */\nimport React, { useState, useEffect } from 'react'\nimport { Progress } from 'reactstrap';\nimport Checkbox from '@material-ui/core/Checkbox';\nimport { Scrollbars } from 'react-custom-scrollbars';\nimport classnames from 'classnames';\nimport update from 'react-addons-update';\nimport List from '@material-ui/core/List';\nimport ListItem from '@material-ui/core/ListItem';\n// api\nimport api from 'Api';\n// card component\nimport { RctCardFooter } from 'Components/RctCard';\n// intl messages\nimport IntlMessages from 'Util/IntlMessages';\n// rct section loader\nimport RctSectionLoader from 'Components/RctSectionLoader/RctSectionLoader';\n\nfunction ActivityBoard() {\n   const [activityData, setActivityData] = useState(null);\n   const [sectionReload, setSectionReload] = useState(false)\n   const [assetsData, setAssetsData] = useState(null)\n\n   useEffect(() => {\n      getAssetstData();\n      getChecklistData();\n   },[])\n\n\t// assets Data\n\n\tconst getAssetstData = () => {\n      setSectionReload(true)\n\t\tapi.get('galleryImages.js')\n\t\t\t.then((response) => {\n            setAssetsData(response.data);\n            setSectionReload(false)\n\t\t\t}).catch(error => {\n            setAssetsData(null);\n            setSectionReload(false)\n\t\t\t})\n\t}\n\n\t// Checklist Data\n\n\tconst getChecklistData = () => {\n      setSectionReload(true)\n\t\tapi.get('ActivityBoardData.js')\n\t\t\t.then((response) => {\n            setActivityData(response.data);\n            setSectionReload(false)\n\t\t\t}).catch(error => {\n            setActivityData(null);\n            setSectionReload(false)\n\t\t\t})\n\t}\n\n\t// on handle change task\n\tconst handleChange = (value, task) => {\n\t\tlet selectedTaskIndex = activityData.indexOf(task);\n      let newState = update(activityData, {\n\t\t\t\t[selectedTaskIndex]: {\n\t\t\t\t\tcompleted: { $set: value }\n\t\t\t}\n      });\n      setSectionReload(true)\n\t\tsetTimeout(() => {\n         setActivityData(newState);\n         setSectionReload(false)\n\t\t}, 1500);\n\t}\n\n\n   return (\n      <div className=\"activity-board-wrapper\">\n         {sectionReload &&\n            <RctSectionLoader />\n         }\n         <Scrollbars className=\"rct-scroll\" autoHeight autoHeightMin={100} autoHeightMax={600} autoHide>\n            <ul className=\"mb-0 list-unstyled\">\n               <li className=\"border-bottom\">\n                  <div className=\"activity-heading d-flex p-4 border-bottom\">\n                     <h3 className=\"mb-0\">Reactify Redesign</h3>\n                  </div>\n                  <div className=\"activity-description p-4\">\n                     <h4 className=\"mb-4\"><IntlMessages id=\"widgets.description\" /></h4>\n                     <div className=\"comment-box mb-4\">\n                        <p className=\"small-text\">\n                           Lorem ipsum dolor sit amet, consectetur adipisicing elit, sed do eiusmod\n                           tempor incididunt ut labore et dolore magna aliqua. Ut enim ad minim veniam,\n                           quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo\n                        </p>\n                     </div>\n                     <h4 className=\"mb-4\">Reactify Redesign Assets</h4>\n                     <ul className=\"mb-0 list-inline attachment-wrap\">\n                        {assetsData && assetsData.map((data, key) => (\n                           <li key={key} className=\"list-inline-item overlay-wrap overflow-hidden rounded\">\n                              <img src={data.imageUrl} className=\"size-120 rounded img-fluid\" alt=\"img\" />\n                              <div className=\"overlay-content\">\n                                 <a href=\"!#\" onClick={e => e.preventDefault()} className=\"d-flex align-items-center justify-content-center h-100 font-2x text-white\">\n                                    <i className=\"zmdi zmdi-download\"></i>\n                                 </a>\n                              </div>\n                           </li>\n                        ))}\n                     </ul>\n                  </div>\n               </li>\n               <li>\n                  <div className=\"activity-heading d-flex p-4 border-bottom\">\n                     <h3 className=\"mb-0\"><IntlMessages id=\"widgets.checklist\" /></h3>\n                  </div>\n                  <div className=\"p-4\">\n                     <Progress color=\"primary\" className=\"mb-3\" value=\"80\">80% Completed</Progress>\n                     <List className=\"p-0\">\n                        {activityData && activityData.map((task, key) => (\n                           <ListItem key={key} onClick={(e) => handleChange(!task.completed, task)} button className=\"p-0\">\n                              <div className={classnames('d-flex  align-items-center', { 'strike': task.completed })}>\n                                 <Checkbox\n                                    color=\"primary\"\n                                    checked={task.completed}\n                                    className=\"mr-20 \"\n                                    onChange={(e) => handleChange(e.target.checked, task)}\n                                 />\n                                 <p className=\"mb-0\">{task.title}</p>\n                              </div>\n                           </ListItem>\n                        ))}\n                     </List>\n                  </div>\n               </li>\n            </ul>\n         </Scrollbars>\n         <RctCardFooter className=\"bg-light\">\n            <span className=\"fs-12 text-base\">\n               <i className=\"mr-15 zmdi zmdi-refresh\"></i>\n               <IntlMessages id=\"widgets.updated10Minago\" />\n            </span>\n         </RctCardFooter>\n      </div>\n   )\n}\n\nexport default ActivityBoard;","import * as React from 'react';\nimport FormControlContext from './FormControlContext';\nexport default function useFormControl() {\n  return React.useContext(FormControlContext);\n}","import * as React from 'react';\n/**\n * @ignore - internal component.\n */\n\nvar FormControlContext = React.createContext();\n\nif (process.env.NODE_ENV !== 'production') {\n  FormControlContext.displayName = 'FormControlContext';\n}\n\nexport function useFormControl() {\n  return React.useContext(FormControlContext);\n}\nexport default FormControlContext;"],"sourceRoot":""}