{"version":3,"sources":["Components/Charts/StackedLineChart.js","Components/Widgets/NewslaterCampaign.js"],"names":["options","legend","display","scales","xAxes","yAxes","gridLines","StackedLineChart","props","settings","useSelector","state","darkMode","_jsx","Line","data","canvas","ctx","getContext","gradientFill1","createLinearGradient","gradientFill2","addColorStop","hexToRgbA","ChartConfig","color","info","primary","labels","datasets","label","lineTension","backgroundColor","borderColor","borderWidth","pointBorderWidth","pointRadius","height","NewslaterCampaign"],"mappings":"gKAUA,MAAMA,EAAU,CACbC,OAAQ,CACLC,SAAS,GAEZC,OAAQ,CACLC,MAAO,CAAC,CACLF,SAAS,IAEZG,MAAO,CAAC,CACLH,SAAS,EACTI,UAAW,CACRJ,SAAS,OAkDNK,MA3Cf,SAA0BC,GACvB,MAAMC,EAAWC,aAAYC,GAASA,EAAMF,YACtC,SAAEG,GAAaH,EAoCrB,OACGI,cAACC,IAAI,CAACC,KApCKC,IACX,MAAMC,EAAMD,EAAOE,WAAW,MAC9B,IAAIC,EAAgBF,EAAIG,qBAAqB,EAAG,EAAG,EAAG,KAClDC,EAAgBJ,EAAIG,qBAAqB,EAAG,EAAG,EAAG,KAMtD,OALAD,EAAcG,aAAa,EAAGC,YAAUC,IAAYC,MAAMC,KAAM,IAChEP,EAAcG,aAAa,EAAGV,EAAW,UAAY,WACrDS,EAAcC,aAAa,EAAGC,YAAUC,IAAYC,MAAME,QAAS,IACnEN,EAAcC,aAAa,EAAGV,EAAW,UAAY,WAE9C,CACJgB,OAAQ,CAAC,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,OACtFC,SAAU,CACP,CACGC,MAAO,aACPC,YAAa,EACbC,gBAAiBb,EACjBc,YAAaT,IAAYC,MAAMC,KAC/BQ,YAAa,EACbC,iBAAkB,EAClBC,YAAa,EACbrB,KAAM,CAAC,GAAI,GAAI,GAAI,GAAI,GAAI,EAAG,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,KAEzD,CACGe,MAAO,aACPC,YAAa,EACbC,gBAAiBX,EACjBY,YAAaT,IAAYC,MAAME,QAC/BO,YAAa,EACbC,iBAAkB,EAClBC,YAAa,EACbrB,KAAM,CAAC,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,MAG/D,EAGiBf,QAASA,EAASqC,OAAQ,KAElD,EC1DeC,UALf,WACG,OACGzB,cAACN,EAAgB,GAEvB,C","file":"static/js/66.96d608f3.chunk.js","sourcesContent":["/**\n * Stacked Line Chart\n */\nimport React from 'react';\nimport { useSelector } from 'react-redux';\nimport { Line } from 'react-chartjs-2';\nimport ChartConfig from \"Constants/chart-config\";\nimport { hexToRgbA } from \"Helpers/helpers\";\n\n// chart options\nconst options = {\n   legend: {\n      display: true\n   },\n   scales: {\n      xAxes: [{\n         display: true,\n      }],\n      yAxes: [{\n         display: true,\n         gridLines: {\n            display: false\n         }\n      }]\n   }\n};\n\n// Main Component\nfunction StackedLineChart(props){\n   const settings = useSelector(state => state.settings);\n   const { darkMode } = settings;\n   const data = (canvas) => {\n      const ctx = canvas.getContext(\"2d\");\n      var gradientFill1 = ctx.createLinearGradient(0, 0, 0, 350);\n      var gradientFill2 = ctx.createLinearGradient(0, 0, 0, 325);\n      gradientFill1.addColorStop(0, hexToRgbA(ChartConfig.color.info, 1));\n      gradientFill1.addColorStop(1, darkMode ? \"#2c3644\" : \"#FFFFFF\");\n      gradientFill2.addColorStop(0, hexToRgbA(ChartConfig.color.primary, 1));\n      gradientFill2.addColorStop(1, darkMode ? \"#000000\" : \"#FFFFFF\");\n\n      return {\n         labels: [\"Jan\", \"Feb\", \"Mar\", \"Apr\", \"May\", \"Jun\", \"Jul\", \"Aug\", \"Sep\", \"Oct\", \"Nov\", \"Dec\"],\n         datasets: [\n            {\n               label: 'Campaign 1',\n               lineTension: 0,\n               backgroundColor: gradientFill1,\n               borderColor: ChartConfig.color.info,\n               borderWidth: 3,\n               pointBorderWidth: 0,\n               pointRadius: 0,\n               data: [50, 45, 22, 18, 25, 5, 35, 20, 45, 22, 30, 70, 40]\n            },\n            {\n               label: 'Campaign 2',\n               lineTension: 0,\n               backgroundColor: gradientFill2,\n               borderColor: ChartConfig.color.primary,\n               borderWidth: 3,\n               pointBorderWidth: 0,\n               pointRadius: 0,\n               data: [40, 30, 60, 30, 35, 50, 10, 30, 25, 28, 55, 65, 80]\n            }\n         ]\n      }\n   }\n   return (\n      <Line data={data} options={options} height={200} />\n   );\n}\n\nexport default StackedLineChart;\n","//Newslater widget\nimport React from 'react'\n\n// chart\nimport StackedLineChart from 'Components/Charts/StackedLineChart';\n\nfunction NewslaterCampaign() {\n   return (\n      <StackedLineChart />\n   )\n}\nexport default NewslaterCampaign;\n"],"sourceRoot":""}