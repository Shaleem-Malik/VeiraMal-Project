{"version":3,"sources":["Components/Widgets/ProjectTaskManagement.js"],"names":["ProjectTaskManagement","sectionReload","setSectionReload","useState","projectData","setProjectData","collapse","setCollapse","selectedProject","setSelectedProject","newTask","setNewTask","taskTitle","taskDate","status","color","completed","team","_jsxs","className","children","_jsx","RctSectionLoader","Scrollbars","autoHeight","autoHeightMin","autoHeightMax","autoHide","Object","keys","map","project","key","IconButton","onClick","openForm","List","data","subKey","ListItem","button","title","getTheDate","date","Badge","member","nestedSubkey","Tooltip","id","name","placement","Avatar","src","avatar","alt","Collapse","isOpen","TextField","onChange","e","_objectSpread","target","value","label","type","fullWidth","InputLabelProps","shrink","timestamp","convertDateToTimeStamp","onChangeDueDate","Button","variant","setTimeout","projects","push","addNewTask","IntlMessages","closeForm","RctCardFooter","customClasses","FormGroup","Input","disabled"],"mappings":"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","file":"static/js/83.74b79b2b.chunk.js","sourcesContent":["/**\n * Project Task Management\n */\nimport React, { useState } from 'react'\nimport { IconButton, Button, List, ListItem, Avatar, TextField, Tooltip} from '@material-ui/core';\nimport { Badge, FormGroup, Input, Collapse } from 'reactstrap';\nimport { Scrollbars } from 'react-custom-scrollbars';\n//Data File\n// import { projectTaskData } from 'Routes/widgets/data';\n// rct section loader\nimport RctSectionLoader from 'Components/RctSectionLoader/RctSectionLoader';\n// card component\nimport { RctCardFooter } from 'Components/RctCard';\n//Helper\nimport { getTheDate, convertDateToTimeStamp } from 'Helpers/helpers';\n// intl messages\nimport IntlMessages from 'Util/IntlMessages';\n\nfunction ProjectTaskManagement() {\n   const [sectionReload, setSectionReload] = useState(false);\n   const [projectData, setProjectData] = useState(null);\n   const [collapse, setCollapse] = useState(false);\n   const [selectedProject, setSelectedProject] = useState(null);\n   const [newTask, setNewTask] = useState({\n      taskTitle: \"\",\n      taskDate: null,\n      status: \"\",\n      color: \"\",\n      completed: false,\n      team: null,\n   });\n   \n   //Close New Task\n   const closeForm = (key) => {\n      setSelectedProject(key);\n      setCollapse(false);\n   }\n\n   //Open New Task\n   const openForm = (key) => {\n      setSelectedProject(key);\n      setCollapse(true);\n   }\n\n   // on change schedule\n   const onChangeDueDate = (e) => {\n      let timestamp = convertDateToTimeStamp(e.target.value);\n      setNewTask({ ...newTask, taskDate: timestamp });\n   }\n\n   //Add New Task\n   const addNewTask = (key) => {\n      const { taskTitle, taskDate } = newTask;\n      if (taskTitle !== '' && taskDate) {\n         let newTask = {\n            title: taskTitle,\n            date: taskDate,\n            status: \"Planning\",\n            color: \"primary\",\n            team: [\n               {\n                  id: 1,\n                  name: \"Lucile\",\n                  avatar: \"https://reactify.theironnetwork.org/data/images/user-1.jpg\",\n               }\n            ]\n         };\n         setSectionReload(true);\n         setCollapse(true);\n         setTimeout(() => {\n            let projects = projectData;\n            projects[key].push(newTask);\n            setProjectData(projects);\n            setCollapse(false);\n            setSectionReload(false);\n            setNewTask({\n               taskTitle: \"\",\n               taskDate: null\n            });\n         }, 1500);\n      }\n   }\n\n   return (\n      <div className=\"task-management-wrapper\">\n         {sectionReload &&\n            <RctSectionLoader />\n         }\n         <Scrollbars className=\"rct-scroll\" autoHeight autoHeightMin={100} autoHeightMax={600} autoHide>\n            <ul className=\"mb-0\">\n               {projectData && Object.keys(projectData).map((project, key) => (\n                  <li key={key}>\n                     <div className=\"project-heading d-flex justify-content-between align-items-center border-bottom\">\n                        <h4 className=\"fw-semi-bold mb-0\">{project}</h4>\n                        <IconButton onClick={() => openForm(project)}>\n                           <i className=\"material-icons\">add_circle</i>\n                        </IconButton>\n                     </div>\n                     <List className=\"p-0\">\n                        {projectData && projectData[project].map((data, subKey) => (\n                           <ListItem\n                              button\n                              className=\"justify-content-between align-items-center border-bottom post-item\"\n                              key={subKey}\n                           >\n                              <div className=\"task-title pr-3\">\n                                 <h4 className=\"mb-5\">{data.title}</h4>\n                                 <span className=\"fs-12 text-base\">{getTheDate(data.date, 'DD MMM YYYY')}</span>\n                              </div>\n                              <div className=\"w-40 d-flex justify-content-between\">\n                                 <span><Badge color={data.color}>{data.status}</Badge></span>\n                                 <div className=\"team-avatar\">\n                                    <ul className=\"m-0 list-inline\">\n                                       {data.team.map((member, nestedSubkey) => (\n                                          <li className=\"list-inline-item\" key={nestedSubkey}>\n                                             <Tooltip id=\"tooltip-top\" title={member.name} placement=\"top\">\n                                                <Avatar src={member.avatar} alt=\"avatar\" className=\"rounded-circle\" />\n                                             </Tooltip>\n                                          </li>\n                                       ))}\n                                    </ul>\n                                 </div>\n                              </div>\n                           </ListItem>\n                        ))}\n                     </List>\n                     {(selectedProject === project) &&\n                        <Collapse isOpen={collapse}>\n                           <div className=\"d-flex p-4 form-wrap border-bottom justify-content-between\">\n                              <div className=\"mr-10\">\n                                 <TextField\n                                    id=\"taskName\"\n                                    onChange={(e) => setNewTask({ ...newTask, taskTitle: e.target.value })}\n                                    value={newTask.taskTitle}\n                                    label=\"Task Name\"\n                                    type=\"text\"\n                                    fullWidth\n                                    className=\"mx-5 mb-30\"\n                                 />\n                                 <TextField\n                                    id=\"date\"\n                                    label=\"Due Date\"\n                                    type=\"date\"\n                                    InputLabelProps={{\n                                       shrink: true\n                                    }}\n                                    fullWidth\n                                    onChange={(e) => onChangeDueDate(e)}\n                                    className=\"mx-5\"\n                                 />\n                              </div>\n                              <div className=\"align-self-end d-flex flex-column text-center\">\n                                 <Button variant=\"contained\" color=\"primary\" className=\"mb-30 text-white  btn-xs\" onClick={() => addNewTask(project)}>\n                                    <span><IntlMessages id=\"button.add\" /></span>\n                                 </Button>\n                                 <Button variant=\"contained\" onClick={() => closeForm(project)} className=\"btn-xs btn-danger text-white\">\n                                    <span><IntlMessages id=\"button.cancel\" /></span>\n                                 </Button>\n                              </div>\n                           </div>\n                        </Collapse>\n                     }\n                  </li>\n               ))}\n            </ul>\n         </Scrollbars>\n         <RctCardFooter customClasses=\" d-flex justify-content-between align-items-center\">\n            <div className=\"d-flex w-40 align-items-center justify-content-between\">\n               <span className=\"fs-12 w-50 text-base\"><IntlMessages id=\"widgets.selectProject\" /></span>\n               <div className=\"app-selectbox-sm\">\n                  <FormGroup className=\"mb-0\">\n                     <Input\n                        type=\"select\"\n                        className=\"fs-12\"\n                        name=\"select\"\n                        id=\"projectSelect\"\n                     >\n                        <option disabled>Select Project</option>\n                        <option value=\"all\">all</option>\n                        <option value=\"BookingKoala\">BookingKoala</option>\n                        <option value=\"Reactify\">Reactify</option>\n                        <option value=\"Adminify\">Adminify</option>\n                     </Input>\n                  </FormGroup>\n               </div>\n            </div>\n            <span className=\"fs-12 text-base\">\n               <i className=\"mr-15 zmdi zmdi-refresh\"></i>\n               <IntlMessages id=\"widgets.updated10Minago\" />\n            </span>\n         </RctCardFooter>\n      </div>\n   )\n}\n\nexport default ProjectTaskManagement;"],"sourceRoot":""}