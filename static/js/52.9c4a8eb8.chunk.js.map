{"version":3,"sources":["../node_modules/recharts/es6/chart/BarChart.js","Components/Charts/CampaignBarChart.js","Components/Widgets/CampaignPerformance.js"],"names":["BarChart","generateCategoricalChart","chartName","GraphicalChild","Bar","defaultTooltipEventType","validateTooltipEventTypes","axisComponents","axisType","AxisComp","XAxis","YAxis","formatAxisMap","SimpleBarChartComponent","props","_jsx","ResponsiveContainer","width","height","children","_jsxs","data","barGap","barSize","margin","top","right","bottom","left","dataKey","stroke","ChartConfig","axesColor","tickLine","domain","minTickGap","interval","axisLine","CartesianGrid","vertical","chartGridColor","Tooltip","fill","color","info","primary","campaigns","yesterday","name","websiteViews","emailSubscription","last5Days","last1Month","last5Months","CampaignPerformance","selectedCamapign","setSelectedCamapign","useState","selected","setSelected","useEffect","setInterval","randomDataKey","obj","result","count","prop","Math","random","pickRandomProperty","CampaignBarChart","className","FormGroup","Input","type","id","onChange","e","target","value","disabled","IntlMessages"],"mappings":"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","file":"static/js/52.9c4a8eb8.chunk.js","sourcesContent":["/**\n * @fileOverview Bar Chart\n */\nimport { generateCategoricalChart } from './generateCategoricalChart';\nimport { Bar } from '../cartesian/Bar';\nimport { XAxis } from '../cartesian/XAxis';\nimport { YAxis } from '../cartesian/YAxis';\nimport { formatAxisMap } from '../util/CartesianUtils';\nexport var BarChart = generateCategoricalChart({\n  chartName: 'BarChart',\n  GraphicalChild: Bar,\n  defaultTooltipEventType: 'axis',\n  validateTooltipEventTypes: ['axis', 'item'],\n  axisComponents: [{\n    axisType: 'xAxis',\n    AxisComp: XAxis\n  }, {\n    axisType: 'yAxis',\n    AxisComp: YAxis\n  }],\n  formatAxisMap: formatAxisMap\n});","import React from 'react';\nimport {\n\tResponsiveContainer,\n\tBarChart,\n\tBar,\n\tXAxis,\n\tYAxis,\n\tCartesianGrid,\n\tTooltip\n} from 'recharts';\nimport ChartConfig from 'Constants/chart-config';\n\nfunction SimpleBarChartComponent(props) {\n   return (\n      <ResponsiveContainer width='100%' height={250}>\n         <BarChart data={props.data} barGap={0} barSize={20} margin={{ top: 10, right: 5, bottom: 10, left: 15 }}>\n            <XAxis dataKey=\"name\" stroke={ChartConfig.axesColor} tickLine={false} />\n            <YAxis\n               stroke={ChartConfig.axesColor}\n               domain={[0, 1000]}\n               minTickGap={0}\n               tickLine={false}\n               width={30}\n               interval={0}\n               axisLine={false}\n            />\n            <CartesianGrid vertical={false} stroke={ChartConfig.chartGridColor} />\n            <Tooltip />\n            <Bar dataKey=\"websiteViews\" fill={ChartConfig.color.info} />\n            <Bar dataKey=\"emailSubscription\" fill={ChartConfig.color.primary} />\n         </BarChart>\n      </ResponsiveContainer>\n   );\n}\n\nexport default SimpleBarChartComponent;\n","/**\n * Campaign Performance Widget\n */\nimport React, { useState, useEffect } from 'react'\nimport { Input, FormGroup } from 'reactstrap';\n// chart\nimport CampaignBarChart from 'Components/Charts/CampaignBarChart';\n// intl messages\nimport IntlMessages from 'Util/IntlMessages';\n\nconst campaigns = {\n\tyesterday: [\n\t\t{ name: '12:00 AM', websiteViews: 600, emailSubscription: 400 },\n\t\t{ name: '4:00 AM', websiteViews: 900, emailSubscription: 550 },\n\t\t{ name: '8:00 AM', websiteViews: 660, emailSubscription: 400 },\n\t\t{ name: '12:00 PM', websiteViews: 750, emailSubscription: 400 },\n\t\t{ name: '16:00 PM', websiteViews: 800, emailSubscription: 450 }\n\t],\n\tlast5Days: [\n\t\t{ name: 'Mon', websiteViews: 600, emailSubscription: 400 },\n\t\t{ name: 'Tue', websiteViews: 900, emailSubscription: 700 },\n\t\t{ name: 'Wed', websiteViews: 725, emailSubscription: 500 },\n\t\t{ name: 'Thu', websiteViews: 900, emailSubscription: 625 },\n\t\t{ name: 'Fri', websiteViews: 460, emailSubscription: 400 }\n\t],\n\tlast1Month: [\n\t\t{ name: '1-5', websiteViews: 800, emailSubscription: 700 },\n\t\t{ name: '6-10', websiteViews: 700, emailSubscription: 600 },\n\t\t{ name: '11-15', websiteViews: 725, emailSubscription: 400 },\n\t\t{ name: '16-20', websiteViews: 600, emailSubscription: 400 },\n\t\t{ name: '21-25', websiteViews: 900, emailSubscription: 500 }\n\t],\n\tlast5Months: [\n\t\t{ name: 'Jan', websiteViews: 900, emailSubscription: 800 },\n\t\t{ name: 'Feb', websiteViews: 700, emailSubscription: 450 },\n\t\t{ name: 'Mar', websiteViews: 725, emailSubscription: 550 },\n\t\t{ name: 'Apr', websiteViews: 625, emailSubscription: 500 },\n\t\t{ name: 'May', websiteViews: 600, emailSubscription: 450 }\n\t]\n}\n\nfunction CampaignPerformance(props) {\n   const [selectedCamapign, setSelectedCamapign] = useState(campaigns['last5Days']);\n   const [selected, setSelected] = useState('last5Days');\n\n   // get random property of object\n\tconst pickRandomProperty = (obj) => {\n\t\tvar result;\n\t\tvar count = 0;\n\t\tfor (var prop in obj)\n\t\t\tif (Math.random() < 1 / ++count)\n\t\t\t\tresult = prop;\n\t\treturn result;\n\t}\n\n   useEffect(() => {\n      setInterval(() => {\n         let randomDataKey = pickRandomProperty(campaigns);\n         setSelectedCamapign(campaigns[randomDataKey]);\n         setSelected(randomDataKey)\n      }, 2000);\n   },[])\n\n   return (\n      <div>\n         <CampaignBarChart\n            data={selectedCamapign}\n         />\n         <div className=\"d-flex justify-content-between align-items-center mt-15\">\n            <div className=\"app-selectbox-sm w-30\">\n               <FormGroup className=\"mb-0\">\n                  <Input\n                     type=\"select\"\n                     className=\"fs-12\"\n                     name=\"select\"\n                     id=\"exampleSelect\"\n                     onChange={(e) => setSelectedCamapign(campaigns[e.target.value])}\n                     value={selected}\n                  >\n                     <option disabled>Select Campaign</option>\n                     <option value=\"last5Days\">Last 5 Days</option>\n                     <option value=\"yesterday\">Yesterday</option>\n                     <option value=\"last1Month\">Last 1 Month</option>\n                     <option value=\"last5Months\">Last 5 Months</option>\n                  </Input>\n               </FormGroup>\n            </div>\n            <span className=\"fs-12 text-base\">\n               <i className=\"mr-5 zmdi zmdi-refresh\"></i>\n               <IntlMessages id=\"widgets.updated10Minago\" />\n            </span>\n         </div>\n      </div>\n   );\n};\n\nexport default CampaignPerformance;\n"],"sourceRoot":""}