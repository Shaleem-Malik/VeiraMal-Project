{"version":3,"sources":["Components/DeleteConfirmationDialog/DeleteConfirmationDialog.js","Components/Widgets/NewCustomers.js","../node_modules/@material-ui/core/esm/Dialog/Dialog.js","../node_modules/@material-ui/core/esm/DialogTitle/DialogTitle.js","../node_modules/@material-ui/core/esm/DialogContent/DialogContent.js","../node_modules/@material-ui/core/esm/DialogContentText/DialogContentText.js","../node_modules/@material-ui/core/esm/DialogActions/DialogActions.js"],"names":["DeleteConfirmationDialog","Component","constructor","arguments","state","open","this","setState","close","render","title","message","onConfirm","props","_jsxs","Dialog","onClose","children","_jsx","DialogTitle","id","DialogContent","DialogContentText","DialogActions","Button","onClick","className","autoFocus","NewCustomers","deleteConfirmationDialogRef","useRef","sectionReload","setSectionReload","useState","newCustomers","setNewCustomers","selectedDeletedCustomer","setSelectedDeletedCustomer","editCustomerModal","setEditCustomerModal","editCustomer","setEditCustomer","snackbar","setSnackbar","successMessage","setSuccessMessage","addNewCustomerForm","setAddNewCustomerForm","addNewCustomerDetails","setAddNewCustomerDetails","customer_email","customer_name","photo_url","useEffect","getNewCustomers","api","get","then","response","data","catch","error","toggleEditCustomerModal","onChangeCustomerDetails","key","value","_objectSpread","onChangeCustomerAddNewForm","Fragment","RctSectionLoader","Scrollbars","autoHeight","autoHeightMin","autoHeightMax","autoHide","map","customer","Avatar","charAt","src","alt","width","height","type","onEditCustomer","current","onDeleteCustomer","variant","color","IntlMessages","ref","deleteCustomer","customers","index","indexOf","setTimeout","splice","Modal","isOpen","toggle","ModalHeader","ModalBody","Form","FormGroup","Label","for","Input","name","onChange","e","target","defaultValue","customer_id","readOnly","ModalFooter","onSubmitAddNewCustomerForm","newCustomer","Date","newAllCustomers","push","onSubmitCustomerEditDetailForm","indexOfCustomer","i","length","update","$set","Snackbar","anchorOrigin","vertical","horizontal","autoHideDuration","defaultTransitionDuration","enter","duration","enteringScreen","exit","leavingScreen","React","BackdropProps","classes","_props$disableBackdro","disableBackdropClick","_props$disableEscapeK","disableEscapeKeyDown","_props$fullScreen","fullScreen","_props$fullWidth","fullWidth","_props$maxWidth","maxWidth","onBackdropClick","onEnter","onEntered","onEntering","onEscapeKeyDown","onExit","onExited","onExiting","_props$PaperComponent","PaperComponent","Paper","_props$PaperProps","PaperProps","_props$scroll","scroll","_props$TransitionComp","TransitionComponent","Fade","_props$transitionDura","transitionDuration","TransitionProps","ariaDescribedby","ariaLabelledby","other","_objectWithoutProperties","mouseDownTarget","_extends","clsx","root","BackdropComponent","Backdrop","closeAfterTransition","appear","in","timeout","role","container","concat","capitalize","onMouseUp","event","currentTarget","onMouseDown","elevation","paper","String","paperFullScreen","paperFullWidth","withStyles","theme","position","scrollPaper","display","justifyContent","alignItems","scrollBody","overflowY","overflowX","textAlign","content","verticalAlign","outline","margin","boxShadow","paperScrollPaper","flexDirection","maxHeight","paperScrollBody","paperWidthFalse","paperWidthXs","Math","max","breakpoints","values","xs","_defineProperty","down","paperWidthSm","sm","paperWidthMd","md","paperWidthLg","lg","paperWidthXl","xl","borderRadius","_props$disableTypogra","disableTypography","Typography","component","padding","flex","_props$dividers","dividers","WebkitOverflowScrolling","paddingTop","borderTop","palette","divider","borderBottom","marginBottom","_props$disableSpacing","disableSpacing","spacing","marginLeft"],"mappings":"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","file":"static/js/24.74bad934.chunk.js","sourcesContent":["/**\n * Delete Confirmation Dialog\n */\nimport React, { Component } from 'react';\nimport { Dialog, DialogActions, DialogContent, DialogContentText, DialogTitle, Button} from '@material-ui/core';\n\nclass DeleteConfirmationDialog extends Component {\n\n   state = {\n      open: false\n   }\n\n   // open dialog\n   open() {\n      this.setState({ open: true });\n   }\n\n   // close dialog\n   close() {\n      this.setState({ open: false });\n   }\n\n   render() {\n      const { title, message, onConfirm } = this.props;\n      return (\n         <Dialog\n            open={this.state.open}\n            onClose={() => this.close()}\n            aria-labelledby=\"alert-dialog-title\"\n            aria-describedby=\"alert-dialog-description\"\n         >\n            <DialogTitle id=\"alert-dialog-title\">{title}</DialogTitle>\n            <DialogContent>\n               <DialogContentText id=\"alert-dialog-description\">\n                  {message}\n               </DialogContentText>\n            </DialogContent>\n            <DialogActions>\n               <Button onClick={() => this.close()} className=\"btn-danger text-white\">\n                  Cancel\n               </Button>\n               <Button onClick={onConfirm} className=\"btn-primary text-white\" autoFocus>\n                  Yes\n               </Button>\n            </DialogActions>\n         </Dialog>\n      );\n   }\n}\n\nexport default DeleteConfirmationDialog;\n","/**\n * New Customers Widget\n */\nimport React, { useState, Fragment, useEffect, useRef } from 'react';\nimport update from 'react-addons-update';\nimport {\n   Modal,\n   ModalHeader,\n   ModalBody,\n   ModalFooter,\n   Form,\n   FormGroup,\n   Label,\n   Input\n} from 'reactstrap';\nimport Button from '@material-ui/core/Button';\nimport Snackbar from '@material-ui/core/Snackbar';\nimport Avatar from '@material-ui/core/Avatar';\nimport { Scrollbars } from 'react-custom-scrollbars';\n// api\nimport api from 'Api';\n// intl messages\nimport IntlMessages from 'Util/IntlMessages';\n// rct section loader\nimport RctSectionLoader from 'Components/RctSectionLoader/RctSectionLoader';\nimport DeleteConfirmationDialog from 'Components/DeleteConfirmationDialog/DeleteConfirmationDialog';\n\nfunction NewCustomers(props) {\n   const deleteConfirmationDialogRef = useRef();\n   const [sectionReload, setSectionReload] = useState(false);\n   const [newCustomers, setNewCustomers] = useState(null);\n   const [selectedDeletedCustomer, setSelectedDeletedCustomer] = useState(null);\n   const [editCustomerModal, setEditCustomerModal] = useState(false);\n   const [editCustomer, setEditCustomer] = useState(null);\n   const [snackbar, setSnackbar] = useState(false);\n   const [successMessage, setSuccessMessage] = useState('');\n   const [addNewCustomerForm, setAddNewCustomerForm] = useState(false);\n   const [addNewCustomerDetails, setAddNewCustomerDetails] = useState({\n      customer_email: '',\n      customer_name: '',\n      id: '',\n      photo_url: ''\n   });\n\n   useEffect(() => {\n      getNewCustomers();\n   },[])\n\n   // get new customers\n   const getNewCustomers = () => {\n      setSectionReload(true);\n      api.get('newCustomers.js')\n         .then((response) => {\n            setNewCustomers(response.data);\n            setSectionReload(false);\n         })\n         .catch(error => {\n            setNewCustomers(null);\n            setSectionReload(false);\n         })\n   }\n\n   // on delete customer\n   const onDeleteCustomer = (customer) =>  {\n      deleteConfirmationDialogRef.current.open();\n      setSelectedDeletedCustomer(customer);\n   }\n\n   // delete customer\n   const deleteCustomer = () => {\n      deleteConfirmationDialogRef.current.close();\n      setSectionReload(true)\n      let customers = newCustomers;\n      let index = customers.indexOf(selectedDeletedCustomer);\n      setTimeout(() => {\n         customers.splice(index, 1);\n         setNewCustomers(customers);\n         setSectionReload(false);\n         setSnackbar(true);\n         setSuccessMessage('Customer Deleted Successfully');\n      }, 1500);\n   }\n\n   // edit customer\n   const onEditCustomer = (customer) => {\n      setEditCustomerModal(true);\n      setEditCustomer(customer);\n      setAddNewCustomerForm(false);\n   }\n\n   // toggle edit customer modal\n   const toggleEditCustomerModal = () => {\n      setEditCustomerModal(!editCustomerModal);\n   }\n\n   // submit customer edit form\n   const onSubmitCustomerEditDetailForm = () => {\n      if (editCustomer.customer_name !== '' && editCustomer.customer_email !== ''){\n         setEditCustomer(false);\n         setSectionReload(true);\n         let indexOfCustomer;\n         for (let i = 0; i < newCustomers.length; i++) {\n            const customer = newCustomers[i];\n            if (customer.customer_id === editCustomer.customer_id) {\n               indexOfCustomer = i;\n            }\n         }\n         setTimeout(() => {\n            setSectionReload(false);\n            setSnackbar(true);\n            setEditCustomerModal(false);\n            setSuccessMessage('Customer Updated Success');\n            setNewCustomers(update(newCustomers,\n               {\n                  [indexOfCustomer]: { $set: editCustomer }\n               }\n            ))\n         }, 1500);\n      }\n   }\n\n   // on change customer details\n   const onChangeCustomerDetails = (key, value) => {\n      setEditCustomer({\n         ...editCustomer,\n         [key]: value\n      })\n   }\n\n   // add new customer\n   const addNewCustomer = () => {\n      setEditCustomerModal(true);\n      setAddNewCustomerForm(true);\n      setEditCustomer(null);\n      setAddNewCustomerDetails({\n         customer_email: '',\n         customer_name: '',\n         id: '',\n         photo_url: ''\n      });\n   }\n\n   // on change customer add new form value\n   const onChangeCustomerAddNewForm = (key, value) => {\n      setAddNewCustomerDetails({\n         ...addNewCustomerDetails,\n         [key]: value\n      })\n   }\n\n   // on submit add new customer form\n   const onSubmitAddNewCustomerForm = () =>  {\n      if (addNewCustomerDetails.customer_name !== '' && addNewCustomerDetails.customer_email !== ''){\n         setEditCustomerModal(false);\n         setSectionReload(true);\n        \n         let newCustomer = addNewCustomerDetails;\n            newCustomer.id = new Date();\n            newCustomer.photo_url = '';\n         let newAllCustomers = newCustomers;\n         setTimeout(() => {\n            newAllCustomers.push(newCustomer);\n            setNewCustomers(newAllCustomers);\n            setSectionReload(false);\n            setSnackbar(true);\n            setSuccessMessage('Customer Added Successfully');\n         }, 1500);\n      }\n   }\n\n   return (\n      <Fragment>\n         {sectionReload &&\n            <RctSectionLoader />\n         }\n         <Scrollbars className=\"rct-scroll\" autoHeight autoHeightMin={100} autoHeightMax={290} autoHide>\n            <ul className=\"list-group new-customer-list\">\n               {newCustomers && newCustomers.map((customer, key) => (\n                  <li className=\"list-group-item d-flex justify-content-between\" key={key}>\n                     <div className=\"d-flex align-items-start\">\n                        <div className=\"media\">\n                           <div className=\"media-left mr-15\">\n                              {customer.photo_url === '' ?\n                                 <Avatar>{customer.customer_name.charAt(0)}</Avatar>\n                                 : <img src={customer.photo_url} alt=\"project logo\" className=\"media-object rounded-circle\" width=\"40\" height=\"40\" />\n                              }\n                           </div>\n                           <div className=\"media-body\">\n                              <span className=\"d-block fs-14\">{customer.customer_name}</span>\n                              <span className=\"d-block fs-12 text-muted\">{customer.customer_email}</span>\n                           </div>\n                        </div>\n                     </div>\n                     <div className=\"d-flex align-items-end\">\n                        <button type=\"button\" className=\"text-primary\" onClick={() => onEditCustomer(customer)}>\n                           <i className=\"zmdi zmdi-edit\"></i>\n                        </button>\n                        <button type=\"button\" className=\"text-danger\" onClick={() => onDeleteCustomer(customer)}>\n                           <i className=\"zmdi zmdi-close\"></i>\n                        </button>\n                     </div>\n                  </li>\n               ))}\n            </ul>\n         </Scrollbars>\n         <div className=\"d-flex p-3\">\n            <Button variant=\"contained\" color=\"primary\" className=\"text-white\" onClick={() => addNewCustomer()}><IntlMessages id=\"widgets.addNew\" /></Button>\n         </div>\n         {/* Delete Customer Confirmation Dialog */}\n         <DeleteConfirmationDialog\n            ref={deleteConfirmationDialogRef}\n            title=\"Are You Sure Want To Delete?\"\n            message=\"Are You Sure Want To Delete Permanently This Customer.\"\n            onConfirm={() => deleteCustomer()}\n         />\n         {/* Customer Edit Modal*/}\n         {editCustomerModal &&\n            <Modal\n               isOpen={editCustomerModal}\n               toggle={toggleEditCustomerModal}\n            >\n               <ModalHeader toggle={toggleEditCustomerModal}>\n                  {addNewCustomerForm ? 'Add New Customer' : 'Edit Customer'}\n               </ModalHeader>\n               <ModalBody>\n                  {addNewCustomerForm ?\n                     <Form>\n                        <FormGroup>\n                           <Label for=\"customerName\">Name</Label>\n                           <Input\n                              type=\"text\"\n                              name=\"name\"\n                              id=\"customerName\"\n                              value={addNewCustomerDetails.customer_name}\n                              onChange={(e) => onChangeCustomerAddNewForm('customer_name', e.target.value)}\n                           />\n                        </FormGroup>\n                        <FormGroup>\n                           <Label for=\"customerEmail\">Email</Label>\n                           <Input\n                              type=\"email\"\n                              name=\"email\"\n                              id=\"customerEmail\"\n                              value={addNewCustomerDetails.customer_email}\n                              onChange={(e) => onChangeCustomerAddNewForm('customer_email', e.target.value)}\n                           />\n                        </FormGroup>\n                     </Form>\n                     : <Form>\n                        <FormGroup>\n                           <Label for=\"customerId\">Id</Label>\n                           <Input\n                              type=\"text\"\n                              name=\"name\"\n                              id=\"customerId\"\n                              defaultValue={editCustomer.customer_id}\n                              readOnly\n                           />\n                        </FormGroup>\n                        <FormGroup>\n                           <Label for=\"customerName\">Name</Label>\n                           <Input\n                              type=\"text\"\n                              name=\"name\"\n                              id=\"customerName\"\n                              value={editCustomer.customer_name}\n                              onChange={(e) => onChangeCustomerDetails('customer_name', e.target.value)}\n                           />\n                        </FormGroup>\n                        <FormGroup>\n                           <Label for=\"customerEmail\">Email</Label>\n                           <Input\n                              type=\"email\"\n                              name=\"email\"\n                              id=\"customerEmail\"\n                              value={editCustomer.customer_email}\n                              onChange={(e) => onChangeCustomerDetails('customer_email', e.target.value)}\n                           />\n                        </FormGroup>\n                     </Form>\n                  }\n               </ModalBody>\n               <ModalFooter>\n                  {addNewCustomerForm ?\n                     <div>\n                        <Button variant=\"contained\" color=\"primary\" className=\"text-white\" onClick={() => onSubmitAddNewCustomerForm()}><IntlMessages id=\"button.add\" /></Button>{' '}\n                        <Button variant=\"contained\" className=\"btn-danger text-white\" onClick={toggleEditCustomerModal}><IntlMessages id=\"button.cancel\" /></Button>\n                     </div>\n                     : <div><Button variant=\"contained\" color=\"primary\" className=\"text-white\" onClick={() => onSubmitCustomerEditDetailForm()}><IntlMessages id=\"button.update\" /></Button>{' '}\n                        <Button variant=\"contained\" className=\"btn-danger text-white\" onClick={toggleEditCustomerModal}><IntlMessages id=\"button.cancel\" /></Button></div>\n                  }\n               </ModalFooter>\n            </Modal>\n         }\n         <Snackbar\n            anchorOrigin={{\n               vertical: 'top',\n               horizontal: 'center',\n            }}\n            open={snackbar}\n            onClose={() => setSnackbar(false)}\n            autoHideDuration={2000}\n            message={<span id=\"message-id\">{successMessage}</span>}\n         />\n      </Fragment>\n   );\n}\n\nexport default NewCustomers;\n","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport withStyles from '../styles/withStyles';\nimport capitalize from '../utils/capitalize';\nimport deprecatedPropType from '../utils/deprecatedPropType';\nimport Modal from '../Modal';\nimport Backdrop from '../Backdrop';\nimport Fade from '../Fade';\nimport { duration } from '../styles/transitions';\nimport Paper from '../Paper';\nexport var styles = function styles(theme) {\n  return {\n    /* Styles applied to the root element. */\n    root: {\n      '@media print': {\n        // Use !important to override the Modal inline-style.\n        position: 'absolute !important'\n      }\n    },\n\n    /* Styles applied to the container element if `scroll=\"paper\"`. */\n    scrollPaper: {\n      display: 'flex',\n      justifyContent: 'center',\n      alignItems: 'center'\n    },\n\n    /* Styles applied to the container element if `scroll=\"body\"`. */\n    scrollBody: {\n      overflowY: 'auto',\n      overflowX: 'hidden',\n      textAlign: 'center',\n      '&:after': {\n        content: '\"\"',\n        display: 'inline-block',\n        verticalAlign: 'middle',\n        height: '100%',\n        width: '0'\n      }\n    },\n\n    /* Styles applied to the container element. */\n    container: {\n      height: '100%',\n      '@media print': {\n        height: 'auto'\n      },\n      // We disable the focus ring for mouse, touch and keyboard users.\n      outline: 0\n    },\n\n    /* Styles applied to the `Paper` component. */\n    paper: {\n      margin: 32,\n      position: 'relative',\n      overflowY: 'auto',\n      // Fix IE 11 issue, to remove at some point.\n      '@media print': {\n        overflowY: 'visible',\n        boxShadow: 'none'\n      }\n    },\n\n    /* Styles applied to the `Paper` component if `scroll=\"paper\"`. */\n    paperScrollPaper: {\n      display: 'flex',\n      flexDirection: 'column',\n      maxHeight: 'calc(100% - 64px)'\n    },\n\n    /* Styles applied to the `Paper` component if `scroll=\"body\"`. */\n    paperScrollBody: {\n      display: 'inline-block',\n      verticalAlign: 'middle',\n      textAlign: 'left' // 'initial' doesn't work on IE 11\n\n    },\n\n    /* Styles applied to the `Paper` component if `maxWidth=false`. */\n    paperWidthFalse: {\n      maxWidth: 'calc(100% - 64px)'\n    },\n\n    /* Styles applied to the `Paper` component if `maxWidth=\"xs\"`. */\n    paperWidthXs: {\n      maxWidth: Math.max(theme.breakpoints.values.xs, 444),\n      '&$paperScrollBody': _defineProperty({}, theme.breakpoints.down(Math.max(theme.breakpoints.values.xs, 444) + 32 * 2), {\n        maxWidth: 'calc(100% - 64px)'\n      })\n    },\n\n    /* Styles applied to the `Paper` component if `maxWidth=\"sm\"`. */\n    paperWidthSm: {\n      maxWidth: theme.breakpoints.values.sm,\n      '&$paperScrollBody': _defineProperty({}, theme.breakpoints.down(theme.breakpoints.values.sm + 32 * 2), {\n        maxWidth: 'calc(100% - 64px)'\n      })\n    },\n\n    /* Styles applied to the `Paper` component if `maxWidth=\"md\"`. */\n    paperWidthMd: {\n      maxWidth: theme.breakpoints.values.md,\n      '&$paperScrollBody': _defineProperty({}, theme.breakpoints.down(theme.breakpoints.values.md + 32 * 2), {\n        maxWidth: 'calc(100% - 64px)'\n      })\n    },\n\n    /* Styles applied to the `Paper` component if `maxWidth=\"lg\"`. */\n    paperWidthLg: {\n      maxWidth: theme.breakpoints.values.lg,\n      '&$paperScrollBody': _defineProperty({}, theme.breakpoints.down(theme.breakpoints.values.lg + 32 * 2), {\n        maxWidth: 'calc(100% - 64px)'\n      })\n    },\n\n    /* Styles applied to the `Paper` component if `maxWidth=\"xl\"`. */\n    paperWidthXl: {\n      maxWidth: theme.breakpoints.values.xl,\n      '&$paperScrollBody': _defineProperty({}, theme.breakpoints.down(theme.breakpoints.values.xl + 32 * 2), {\n        maxWidth: 'calc(100% - 64px)'\n      })\n    },\n\n    /* Styles applied to the `Paper` component if `fullWidth={true}`. */\n    paperFullWidth: {\n      width: 'calc(100% - 64px)'\n    },\n\n    /* Styles applied to the `Paper` component if `fullScreen={true}`. */\n    paperFullScreen: {\n      margin: 0,\n      width: '100%',\n      maxWidth: '100%',\n      height: '100%',\n      maxHeight: 'none',\n      borderRadius: 0,\n      '&$paperScrollBody': {\n        margin: 0,\n        maxWidth: '100%'\n      }\n    }\n  };\n};\nvar defaultTransitionDuration = {\n  enter: duration.enteringScreen,\n  exit: duration.leavingScreen\n};\n/**\n * Dialogs are overlaid modal paper based components with a backdrop.\n */\n\nvar Dialog = /*#__PURE__*/React.forwardRef(function Dialog(props, ref) {\n  var BackdropProps = props.BackdropProps,\n      children = props.children,\n      classes = props.classes,\n      className = props.className,\n      _props$disableBackdro = props.disableBackdropClick,\n      disableBackdropClick = _props$disableBackdro === void 0 ? false : _props$disableBackdro,\n      _props$disableEscapeK = props.disableEscapeKeyDown,\n      disableEscapeKeyDown = _props$disableEscapeK === void 0 ? false : _props$disableEscapeK,\n      _props$fullScreen = props.fullScreen,\n      fullScreen = _props$fullScreen === void 0 ? false : _props$fullScreen,\n      _props$fullWidth = props.fullWidth,\n      fullWidth = _props$fullWidth === void 0 ? false : _props$fullWidth,\n      _props$maxWidth = props.maxWidth,\n      maxWidth = _props$maxWidth === void 0 ? 'sm' : _props$maxWidth,\n      onBackdropClick = props.onBackdropClick,\n      onClose = props.onClose,\n      onEnter = props.onEnter,\n      onEntered = props.onEntered,\n      onEntering = props.onEntering,\n      onEscapeKeyDown = props.onEscapeKeyDown,\n      onExit = props.onExit,\n      onExited = props.onExited,\n      onExiting = props.onExiting,\n      open = props.open,\n      _props$PaperComponent = props.PaperComponent,\n      PaperComponent = _props$PaperComponent === void 0 ? Paper : _props$PaperComponent,\n      _props$PaperProps = props.PaperProps,\n      PaperProps = _props$PaperProps === void 0 ? {} : _props$PaperProps,\n      _props$scroll = props.scroll,\n      scroll = _props$scroll === void 0 ? 'paper' : _props$scroll,\n      _props$TransitionComp = props.TransitionComponent,\n      TransitionComponent = _props$TransitionComp === void 0 ? Fade : _props$TransitionComp,\n      _props$transitionDura = props.transitionDuration,\n      transitionDuration = _props$transitionDura === void 0 ? defaultTransitionDuration : _props$transitionDura,\n      TransitionProps = props.TransitionProps,\n      ariaDescribedby = props['aria-describedby'],\n      ariaLabelledby = props['aria-labelledby'],\n      other = _objectWithoutProperties(props, [\"BackdropProps\", \"children\", \"classes\", \"className\", \"disableBackdropClick\", \"disableEscapeKeyDown\", \"fullScreen\", \"fullWidth\", \"maxWidth\", \"onBackdropClick\", \"onClose\", \"onEnter\", \"onEntered\", \"onEntering\", \"onEscapeKeyDown\", \"onExit\", \"onExited\", \"onExiting\", \"open\", \"PaperComponent\", \"PaperProps\", \"scroll\", \"TransitionComponent\", \"transitionDuration\", \"TransitionProps\", \"aria-describedby\", \"aria-labelledby\"]);\n\n  var mouseDownTarget = React.useRef();\n\n  var handleMouseDown = function handleMouseDown(event) {\n    mouseDownTarget.current = event.target;\n  };\n\n  var handleBackdropClick = function handleBackdropClick(event) {\n    // Ignore the events not coming from the \"backdrop\"\n    // We don't want to close the dialog when clicking the dialog content.\n    if (event.target !== event.currentTarget) {\n      return;\n    } // Make sure the event starts and ends on the same DOM element.\n\n\n    if (event.target !== mouseDownTarget.current) {\n      return;\n    }\n\n    mouseDownTarget.current = null;\n\n    if (onBackdropClick) {\n      onBackdropClick(event);\n    }\n\n    if (!disableBackdropClick && onClose) {\n      onClose(event, 'backdropClick');\n    }\n  };\n\n  return /*#__PURE__*/React.createElement(Modal, _extends({\n    className: clsx(classes.root, className),\n    BackdropComponent: Backdrop,\n    BackdropProps: _extends({\n      transitionDuration: transitionDuration\n    }, BackdropProps),\n    closeAfterTransition: true\n  }, disableBackdropClick ? {\n    disableBackdropClick: disableBackdropClick\n  } : {}, {\n    disableEscapeKeyDown: disableEscapeKeyDown,\n    onEscapeKeyDown: onEscapeKeyDown,\n    onClose: onClose,\n    open: open,\n    ref: ref\n  }, other), /*#__PURE__*/React.createElement(TransitionComponent, _extends({\n    appear: true,\n    in: open,\n    timeout: transitionDuration,\n    onEnter: onEnter,\n    onEntering: onEntering,\n    onEntered: onEntered,\n    onExit: onExit,\n    onExiting: onExiting,\n    onExited: onExited,\n    role: \"none presentation\"\n  }, TransitionProps), /*#__PURE__*/React.createElement(\"div\", {\n    className: clsx(classes.container, classes[\"scroll\".concat(capitalize(scroll))]),\n    onMouseUp: handleBackdropClick,\n    onMouseDown: handleMouseDown\n  }, /*#__PURE__*/React.createElement(PaperComponent, _extends({\n    elevation: 24,\n    role: \"dialog\",\n    \"aria-describedby\": ariaDescribedby,\n    \"aria-labelledby\": ariaLabelledby\n  }, PaperProps, {\n    className: clsx(classes.paper, classes[\"paperScroll\".concat(capitalize(scroll))], classes[\"paperWidth\".concat(capitalize(String(maxWidth)))], PaperProps.className, fullScreen && classes.paperFullScreen, fullWidth && classes.paperFullWidth)\n  }), children))));\n});\nprocess.env.NODE_ENV !== \"production\" ? Dialog.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\n  // ----------------------------------------------------------------------\n\n  /**\n   * The id(s) of the element(s) that describe the dialog.\n   */\n  'aria-describedby': PropTypes.string,\n\n  /**\n   * The id(s) of the element(s) that label the dialog.\n   */\n  'aria-labelledby': PropTypes.string,\n\n  /**\n   * @ignore\n   */\n  BackdropProps: PropTypes.object,\n\n  /**\n   * Dialog children, usually the included sub-components.\n   */\n  children: PropTypes.node,\n\n  /**\n   * Override or extend the styles applied to the component.\n   * See [CSS API](#css) below for more details.\n   */\n  classes: PropTypes.object,\n\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n\n  /**\n   * If `true`, clicking the backdrop will not fire the `onClose` callback.\n   * @deprecated Use the onClose prop with the `reason` argument to filter the `backdropClick` events.\n   */\n  disableBackdropClick: deprecatedPropType(PropTypes.bool, 'Use the onClose prop with the `reason` argument to filter the `backdropClick` events.'),\n\n  /**\n   * If `true`, hitting escape will not fire the `onClose` callback.\n   */\n  disableEscapeKeyDown: PropTypes.bool,\n\n  /**\n   * If `true`, the dialog will be full-screen\n   */\n  fullScreen: PropTypes.bool,\n\n  /**\n   * If `true`, the dialog stretches to `maxWidth`.\n   *\n   * Notice that the dialog width grow is limited by the default margin.\n   */\n  fullWidth: PropTypes.bool,\n\n  /**\n   * Determine the max-width of the dialog.\n   * The dialog width grows with the size of the screen.\n   * Set to `false` to disable `maxWidth`.\n   */\n  maxWidth: PropTypes.oneOf(['lg', 'md', 'sm', 'xl', 'xs', false]),\n\n  /**\n   * Callback fired when the backdrop is clicked.\n   * @deprecated Use the onClose prop with the `reason` argument to handle the `backdropClick` events.\n   */\n  onBackdropClick: deprecatedPropType(PropTypes.func, 'Use the onClose prop with the `reason` argument to handle the `backdropClick` events.'),\n\n  /**\n   * Callback fired when the component requests to be closed.\n   *\n   * @param {object} event The event source of the callback.\n   * @param {string} reason Can be: `\"escapeKeyDown\"`, `\"backdropClick\"`.\n   */\n  onClose: PropTypes.func,\n\n  /**\n   * Callback fired before the dialog enters.\n   * @deprecated Use the `TransitionProps` prop instead.\n   */\n  onEnter: deprecatedPropType(PropTypes.func, 'Use the `TransitionProps` prop instead.'),\n\n  /**\n   * Callback fired when the dialog has entered.\n   * @deprecated Use the `TransitionProps` prop instead.\n   */\n  onEntered: deprecatedPropType(PropTypes.func, 'Use the `TransitionProps` prop instead.'),\n\n  /**\n   * Callback fired when the dialog is entering.\n   * @deprecated Use the `TransitionProps` prop instead.\n   */\n  onEntering: deprecatedPropType(PropTypes.func, 'Use the `TransitionProps` prop instead.'),\n\n  /**\n   * Callback fired when the escape key is pressed,\n   * `disableKeyboard` is false and the modal is in focus.\n   * @deprecated Use the onClose prop with the `reason` argument to handle the `escapeKeyDown` events.\n   */\n  onEscapeKeyDown: deprecatedPropType(PropTypes.func, 'Use the onClose prop with the `reason` argument to handle the `escapeKeyDown` events.'),\n\n  /**\n   * Callback fired before the dialog exits.\n   * @deprecated Use the `TransitionProps` prop instead.\n   */\n  onExit: deprecatedPropType(PropTypes.func, 'Use the `TransitionProps` prop instead.'),\n\n  /**\n   * Callback fired when the dialog has exited.\n   * @deprecated Use the `TransitionProps` prop instead.\n   */\n  onExited: deprecatedPropType(PropTypes.func, 'Use the `TransitionProps` prop instead.'),\n\n  /**\n   * Callback fired when the dialog is exiting.\n   * @deprecated Use the `TransitionProps` prop instead.\n   */\n  onExiting: deprecatedPropType(PropTypes.func, 'Use the `TransitionProps` prop instead.'),\n\n  /**\n   * If `true`, the Dialog is open.\n   */\n  open: PropTypes.bool.isRequired,\n\n  /**\n   * The component used to render the body of the dialog.\n   */\n  PaperComponent: PropTypes.elementType,\n\n  /**\n   * Props applied to the [`Paper`](/api/paper/) element.\n   */\n  PaperProps: PropTypes.object,\n\n  /**\n   * Determine the container for scrolling the dialog.\n   */\n  scroll: PropTypes.oneOf(['body', 'paper']),\n\n  /**\n   * The component used for the transition.\n   * [Follow this guide](/components/transitions/#transitioncomponent-prop) to learn more about the requirements for this component.\n   */\n  TransitionComponent: PropTypes.elementType,\n\n  /**\n   * The duration for the transition, in milliseconds.\n   * You may specify a single timeout for all transitions, or individually with an object.\n   */\n  transitionDuration: PropTypes.oneOfType([PropTypes.number, PropTypes.shape({\n    appear: PropTypes.number,\n    enter: PropTypes.number,\n    exit: PropTypes.number\n  })]),\n\n  /**\n   * Props applied to the [`Transition`](http://reactcommunity.org/react-transition-group/transition#Transition-props) element.\n   */\n  TransitionProps: PropTypes.object\n} : void 0;\nexport default withStyles(styles, {\n  name: 'MuiDialog'\n})(Dialog);","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport withStyles from '../styles/withStyles';\nimport Typography from '../Typography';\nexport var styles = {\n  /* Styles applied to the root element. */\n  root: {\n    margin: 0,\n    padding: '16px 24px',\n    flex: '0 0 auto'\n  }\n};\nvar DialogTitle = /*#__PURE__*/React.forwardRef(function DialogTitle(props, ref) {\n  var children = props.children,\n      classes = props.classes,\n      className = props.className,\n      _props$disableTypogra = props.disableTypography,\n      disableTypography = _props$disableTypogra === void 0 ? false : _props$disableTypogra,\n      other = _objectWithoutProperties(props, [\"children\", \"classes\", \"className\", \"disableTypography\"]);\n\n  return /*#__PURE__*/React.createElement(\"div\", _extends({\n    className: clsx(classes.root, className),\n    ref: ref\n  }, other), disableTypography ? children : /*#__PURE__*/React.createElement(Typography, {\n    component: \"h2\",\n    variant: \"h6\"\n  }, children));\n});\nprocess.env.NODE_ENV !== \"production\" ? DialogTitle.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\n  // ----------------------------------------------------------------------\n\n  /**\n   * The content of the component.\n   */\n  children: PropTypes.node,\n\n  /**\n   * Override or extend the styles applied to the component.\n   * See [CSS API](#css) below for more details.\n   */\n  classes: PropTypes.object,\n\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n\n  /**\n   * If `true`, the children won't be wrapped by a typography component.\n   * For instance, this can be useful to render an h4 instead of the default h2.\n   */\n  disableTypography: PropTypes.bool\n} : void 0;\nexport default withStyles(styles, {\n  name: 'MuiDialogTitle'\n})(DialogTitle);","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport withStyles from '../styles/withStyles';\nexport var styles = function styles(theme) {\n  return {\n    /* Styles applied to the root element. */\n    root: {\n      flex: '1 1 auto',\n      WebkitOverflowScrolling: 'touch',\n      // Add iOS momentum scrolling.\n      overflowY: 'auto',\n      padding: '8px 24px',\n      '&:first-child': {\n        // dialog without title\n        paddingTop: 20\n      }\n    },\n\n    /* Styles applied to the root element if `dividers={true}`. */\n    dividers: {\n      padding: '16px 24px',\n      borderTop: \"1px solid \".concat(theme.palette.divider),\n      borderBottom: \"1px solid \".concat(theme.palette.divider)\n    }\n  };\n};\nvar DialogContent = /*#__PURE__*/React.forwardRef(function DialogContent(props, ref) {\n  var classes = props.classes,\n      className = props.className,\n      _props$dividers = props.dividers,\n      dividers = _props$dividers === void 0 ? false : _props$dividers,\n      other = _objectWithoutProperties(props, [\"classes\", \"className\", \"dividers\"]);\n\n  return /*#__PURE__*/React.createElement(\"div\", _extends({\n    className: clsx(classes.root, className, dividers && classes.dividers),\n    ref: ref\n  }, other));\n});\nprocess.env.NODE_ENV !== \"production\" ? DialogContent.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\n  // ----------------------------------------------------------------------\n\n  /**\n   * The content of the component.\n   */\n  children: PropTypes.node,\n\n  /**\n   * Override or extend the styles applied to the component.\n   * See [CSS API](#css) below for more details.\n   */\n  classes: PropTypes.object,\n\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n\n  /**\n   * Display the top and bottom dividers.\n   */\n  dividers: PropTypes.bool\n} : void 0;\nexport default withStyles(styles, {\n  name: 'MuiDialogContent'\n})(DialogContent);","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport withStyles from '../styles/withStyles';\nimport Typography from '../Typography';\nexport var styles = {\n  /* Styles applied to the root element. */\n  root: {\n    marginBottom: 12\n  }\n};\nvar DialogContentText = /*#__PURE__*/React.forwardRef(function DialogContentText(props, ref) {\n  return /*#__PURE__*/React.createElement(Typography, _extends({\n    component: \"p\",\n    variant: \"body1\",\n    color: \"textSecondary\",\n    ref: ref\n  }, props));\n});\nprocess.env.NODE_ENV !== \"production\" ? DialogContentText.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\n  // ----------------------------------------------------------------------\n\n  /**\n   * The content of the component.\n   */\n  children: PropTypes.node,\n\n  /**\n   * Override or extend the styles applied to the component.\n   * See [CSS API](#css) below for more details.\n   */\n  classes: PropTypes.object\n} : void 0;\nexport default withStyles(styles, {\n  name: 'MuiDialogContentText'\n})(DialogContentText);","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport withStyles from '../styles/withStyles';\nexport var styles = {\n  /* Styles applied to the root element. */\n  root: {\n    display: 'flex',\n    alignItems: 'center',\n    padding: 8,\n    justifyContent: 'flex-end',\n    flex: '0 0 auto'\n  },\n\n  /* Styles applied to the root element if `disableSpacing={false}`. */\n  spacing: {\n    '& > :not(:first-child)': {\n      marginLeft: 8\n    }\n  }\n};\nvar DialogActions = /*#__PURE__*/React.forwardRef(function DialogActions(props, ref) {\n  var _props$disableSpacing = props.disableSpacing,\n      disableSpacing = _props$disableSpacing === void 0 ? false : _props$disableSpacing,\n      classes = props.classes,\n      className = props.className,\n      other = _objectWithoutProperties(props, [\"disableSpacing\", \"classes\", \"className\"]);\n\n  return /*#__PURE__*/React.createElement(\"div\", _extends({\n    className: clsx(classes.root, className, !disableSpacing && classes.spacing),\n    ref: ref\n  }, other));\n});\nprocess.env.NODE_ENV !== \"production\" ? DialogActions.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\n  // ----------------------------------------------------------------------\n\n  /**\n   * The content of the component.\n   */\n  children: PropTypes.node,\n\n  /**\n   * Override or extend the styles applied to the component.\n   * See [CSS API](#css) below for more details.\n   */\n  classes: PropTypes.object,\n\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n\n  /**\n   * If `true`, the actions do not have additional margin.\n   */\n  disableSpacing: PropTypes.bool\n} : void 0;\nexport default withStyles(styles, {\n  name: 'MuiDialogActions'\n})(DialogActions);"],"sourceRoot":""}