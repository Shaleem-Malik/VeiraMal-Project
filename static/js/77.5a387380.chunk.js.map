{"version":3,"sources":["Components/Charts/ProductStatsChart.js","Components/Widgets/ProductStats.js"],"names":["options","elements","point","radius","legend","display","labels","fontColor","ChartConfig","legendFontColor","scales","xAxes","gridLines","offsetGridLines","ticks","axesColor","yAxes","drawBorder","zeroLineColor","chartGridColor","stepSize","beginAtZero","padding","ProductStatsChart","props","datasets","_jsx","Line","data","canvas","ctx","getContext","_stroke","stroke","save","shadowColor","shadowBlur","shadowOffsetX","shadowOffsetY","apply","this","arguments","restore","height","ProductStats","_jsxs","Fragment","children","className","customLegends","map","key","concat","class","name"],"mappings":"kJAUA,MAAMA,EAAU,CACZC,SAAU,CACNC,MAAO,CACHC,OAAQ,IAGhBC,OAAQ,CACJC,SAAS,EACTC,OAAQ,CACJC,UAAWC,IAAYC,kBAG/BC,OAAQ,CACJC,MAAO,CAAC,CACJC,UAAW,CACPC,iBAAiB,EACjBR,SAAS,GAEbS,MAAO,CACHP,UAAWC,IAAYO,aAG/BC,MAAO,CAAC,CACJJ,UAAW,CACPK,YAAY,EACZC,cAAeV,IAAYW,gBAE/BL,MAAO,CACHP,UAAWC,IAAYO,UACvBK,SAAU,IACVC,aAAa,EACbC,QAAS,QA8BVC,MAxBf,SAA2BC,GACxB,MAAM,OAAElB,EAAM,SAAEmB,GAAaD,EAkB7B,OACGE,cAACC,IAAI,CAACC,KAlBKC,IACX,MAAMC,EAAMD,EAAOE,WAAW,MACxBC,EAAUF,EAAIG,OAUpB,OATAH,EAAIG,OAAS,WACPH,EAAII,OACJJ,EAAIK,YAAc,kBAClBL,EAAIM,WAAa,GACjBN,EAAIO,cAAgB,EACpBP,EAAIQ,cAAgB,GACpBN,EAAQO,MAAMC,KAAMC,WACpBX,EAAIY,SACV,EACO,CACDpC,SACAmB,WACL,EAGiBzB,QAASA,EAAS2C,OAAQ,IAElD,EC1CeC,UApBf,SAAsBpB,GACnB,MAAM,KAAEI,GAASJ,EACjB,OACGqB,eAACC,WAAQ,CAAAC,SAAA,CACNrB,cAAA,OAAKsB,UAAU,iBAAgBD,SAC3BnB,GAAQA,EAAKqB,cAAcC,KAAI,CAAC9C,EAAQ+C,IACtCN,eAACC,WAAQ,CAAAC,SAAA,CACHrB,cAAA,QAAMsB,UAAS,GAAAI,OAAKhD,EAAOiD,MAAK,kBAAiBN,SAAC,SAClDrB,cAAA,QAAMsB,UAAU,cAAaD,SAAE3C,EAAOkD,SAF7BH,OAMrBzB,cAACH,EAAiB,CACfjB,OAAQsB,GAAQA,EAAKtB,OACrBmB,SAAUG,GAAQA,EAAKH,aAInC,C","file":"static/js/77.5a387380.chunk.js","sourcesContent":["/**\n * Product Stats Chart\n */\nimport React from 'react';\nimport { Line } from 'react-chartjs-2';\n\n// chart config\nimport ChartConfig from 'Constants/chart-config';\n\n// options\nconst options = {\n    elements: {\n        point: {\n            radius: 0\n        }\n    },\n    legend: {\n        display: false,\n        labels: {\n            fontColor: ChartConfig.legendFontColor\n        }\n    },\n    scales: {\n        xAxes: [{\n            gridLines: {\n                offsetGridLines: true,\n                display: false\n            },\n            ticks: {\n                fontColor: ChartConfig.axesColor\n            }\n        }],\n        yAxes: [{\n            gridLines: {\n                drawBorder: false,\n                zeroLineColor: ChartConfig.chartGridColor\n            },\n            ticks: {\n                fontColor: ChartConfig.axesColor,\n                stepSize: 1000,\n                beginAtZero: true,\n                padding: 40\n            }\n        }]\n    }\n};\n\nfunction ProductStatsChart(props) {\n   const { labels, datasets } = props;\n   const data = (canvas) => {\n      const ctx = canvas.getContext(\"2d\");\n      const _stroke = ctx.stroke;\n      ctx.stroke = function () {\n            ctx.save();\n            ctx.shadowColor = 'rgba(0,0,0,0.5)';\n            ctx.shadowBlur = 13;\n            ctx.shadowOffsetX = 0;\n            ctx.shadowOffsetY = 12;\n            _stroke.apply(this, arguments);\n            ctx.restore();\n      };\n      return {\n            labels,\n            datasets\n      }\n   }\n   return (\n      <Line data={data} options={options} height={95} />\n   );\n}\n\nexport default ProductStatsChart;\n","/**\n * Product Stats Widget\n */\nimport React, { Fragment } from 'react';\n// chart\nimport ProductStatsChart from 'Components/Charts/ProductStatsChart';\n\nfunction ProductStats(props){\n   const { data } = props;\n   return (\n      <Fragment>\n         <div className=\"chart-top mb-4\">\n            {data && data.customLegends.map((legend, key) => (\n               <Fragment key={key}>\n                     <span className={`${legend.class} ladgend mr-10`}>&nbsp;</span>\n                     <span className=\"fs-12 mr-10\">{legend.name}</span>\n               </Fragment>\n            ))}\n         </div>\n         <ProductStatsChart\n            labels={data && data.labels}\n            datasets={data && data.datasets}\n         />\n      </Fragment>\n   );\n}\n\nexport default ProductStats;\n"],"sourceRoot":""}