{"version":3,"sources":["../node_modules/reactstrap/es/Table.js","Components/Widgets/ProjectManagement.js"],"names":["_excluded","propTypes","className","PropTypes","string","cssModule","object","size","bordered","bool","borderless","striped","dark","hover","responsive","oneOfType","tag","tagPropType","responsiveTag","innerRef","func","Table","props","Tag","ResponsiveTag","attributes","_objectWithoutPropertiesLoose","classes","mapToCssModules","classNames","table","React","createElement","_extends","ref","responsiveClassName","defaultProps","ProjectItem","collapse","setCollapse","useState","data","_jsxs","Fragment","children","_jsx","name","getTheDate","date","Progress","color","progress","value","status","team","map","member","subkey","Tooltip","id","title","placement","Avatar","alt","src","avatar","IconButton","onClick","colSpan","Collapse","isOpen","IntlMessages","description","ProjectManagement","projectListData","setProjectListData","sectionReload","setSectionReload","useEffect","getProjectData","api","get","then","response","catch","error","RctSectionLoader","Scrollbars","autoHeight","autoHeightMin","autoHeightMax","autoHide","key","RctCardFooter"],"mappings":"4MAEIA,EAAY,CAAC,YAAa,YAAa,OAAQ,WAAY,aAAc,UAAW,OAAQ,QAAS,aAAc,MAAO,gBAAiB,YAK3IC,EAAY,CACdC,UAAWC,IAAUC,OACrBC,UAAWF,IAAUG,OACrBC,KAAMJ,IAAUC,OAChBI,SAAUL,IAAUM,KACpBC,WAAYP,IAAUM,KACtBE,QAASR,IAAUM,KACnBG,KAAMT,IAAUM,KAChBI,MAAOV,IAAUM,KACjBK,WAAYX,IAAUY,UAAU,CAACZ,IAAUM,KAAMN,IAAUC,SAC3DY,IAAKC,IACLC,cAAeD,IACfE,SAAUhB,IAAUY,UAAU,CAACZ,IAAUiB,KAAMjB,IAAUC,OAAQD,IAAUG,UAOzEe,EAAQ,SAAeC,GACzB,IAAIpB,EAAYoB,EAAMpB,UAClBG,EAAYiB,EAAMjB,UAClBE,EAAOe,EAAMf,KACbC,EAAWc,EAAMd,SACjBE,EAAaY,EAAMZ,WACnBC,EAAUW,EAAMX,QAChBC,EAAOU,EAAMV,KACbC,EAAQS,EAAMT,MACdC,EAAaQ,EAAMR,WACnBS,EAAMD,EAAMN,IACZQ,EAAgBF,EAAMJ,cACtBC,EAAWG,EAAMH,SACjBM,EAAaC,YAA8BJ,EAAOtB,GAElD2B,EAAUC,YAAgBC,IAAW3B,EAAW,UAASK,GAAO,SAAWA,IAAcC,GAAW,mBAA0BE,GAAa,qBAA4BC,GAAU,kBAAyBC,GAAO,eAAsBC,GAAQ,eAAwBR,GACvQyB,EAAqBC,IAAMC,cAAcT,EAAKU,YAAS,CAAC,EAAGR,EAAY,CACzES,IAAKf,EACLjB,UAAWyB,KAGb,GAAIb,EAAY,CACd,IAAIqB,EAAsBP,aAA+B,IAAfd,EAAsB,mBAAqB,oBAAsBA,EAAYT,GACvH,OAAoB0B,IAAMC,cAAcR,EAAe,CACrDtB,UAAWiC,GACVL,EACL,CAEA,OAAOA,CACT,EAEAT,EAAMpB,UAAYA,EAClBoB,EAAMe,aArCa,CACjBpB,IAAK,QACLE,cAAe,OAoCFG,Q,mFCjCf,SAASgB,EAAYf,GAClB,MAAOgB,EAAUC,GAAeC,oBAAS,IAOnC,KAAEC,GAASnB,EACjB,OACGoB,eAACC,WAAQ,CAAAC,SAAA,CACNF,eAAA,MAAAE,SAAA,CACGC,cAAA,MAAAD,SAAKH,EAAKK,OACVD,cAAA,MAAAD,SAAKG,YAAWN,EAAKO,KAAM,iBAC3BN,eAAA,MAAAE,SAAA,CACGC,cAACI,IAAQ,CAACC,MAAOT,EAAKU,SAASD,MAAOhD,UAAU,aAAakD,MAAOX,EAAKU,SAASC,QAClFP,cAAA,KAAG3C,UAAU,wBAAuB0C,SAAEH,EAAKY,YAE9CX,eAAA,MAAIxC,UAAU,iCAAgC0C,SAAA,CAC3CC,cAAA,OAAK3C,UAAU,oBAAmB0C,SAC/BC,cAAA,MAAI3C,UAAU,mBAAkB0C,SAC5BH,EAAKa,KAAKC,KAAI,CAACC,EAAQC,IACrBZ,cAAA,MAAI3C,UAAU,mBAAkB0C,SAC7BC,cAACa,IAAO,CAACC,GAAG,cAAcC,MAAOJ,EAAOV,KAAMe,UAAU,MAAKjB,SAC1DC,cAACiB,IAAM,CAACC,IAAI,SAASC,IAAKR,EAAOS,OAAQ/D,UAAU,sBAFnBuD,SAQ/CZ,cAACqB,IAAU,CAACC,QAASA,KAzB9B5B,GAAaD,EAyB2C,EAAAM,SAC3CN,EACEO,cAAA,KAAG3C,UAAU,iBAAgB0C,SAAC,kBAE9BC,cAAA,KAAG3C,UAAU,iBAAgB0C,SAAC,uBAKzCN,GACEO,cAAA,MAAAD,SACGC,cAAA,MAAIuB,QAAQ,IAAGxB,SACZC,cAACwB,IAAQ,CAACC,OAAQhC,EAASM,SACxBF,eAAA,OAAKxC,UAAU,OAAM0C,SAAA,CAClBC,cAAA,MAAAD,SAAIC,cAAC0B,IAAY,CAACZ,GAAG,0BACrBd,cAAA,KAAAD,SAAIH,EAAK+B,yBAQjC,CA2DeC,UAzDf,WACG,MAAOC,EAAiBC,GAAsBnC,mBAAS,OAChDoC,EAAeC,GAAoBrC,oBAAS,GAErDsC,qBAAU,KACTC,GAAgB,GACf,IAIF,MAAMA,EAAgBA,KACjBF,GAAiB,GACrBG,IAAIC,IAAI,kBACNC,MAAMC,IACER,EAAmBQ,EAAS1C,MAC5BoC,GAAiB,EAAM,IAC7BO,OAAMC,IACAV,EAAmB,MACnBE,GAAiB,EAAM,GAC9B,EAGF,OACGnC,eAAA,OAAKxC,UAAU,6BAA4B0C,SAAA,CACvCgC,GACE/B,cAACyC,IAAgB,IAEpBzC,cAAC0C,aAAU,CAACrF,UAAU,aAAasF,YAAU,EAACC,cAAe,IAAKC,cAAe,IAAKC,UAAQ,EAAA/C,SAC3FF,eAACrB,EAAK,CAACR,OAAK,EAACX,UAAU,OAAOY,YAAU,EAAA8B,SAAA,CACrCC,cAAA,SAAAD,SACGF,eAAA,MAAAE,SAAA,CACGC,cAAA,MAAAD,SAAIC,cAAC0B,IAAY,CAACZ,GAAG,6BACrBd,cAAA,MAAAD,SAAIC,cAAC0B,IAAY,CAACZ,GAAG,uBACrBd,cAAA,MAAAD,SAAIC,cAAC0B,IAAY,CAACZ,GAAG,qBACrBd,cAAA,MAAAD,SAAIC,cAAC0B,IAAY,CAACZ,GAAG,wBAG3Bd,cAAA,SAAAD,SACI8B,GAAmBA,EAAgBnB,KAAI,CAACd,EAAMmD,IAC5C/C,cAACR,EAAW,CAETI,KAAMA,GADDmD,YAOpB/C,cAACgD,IAAa,CAAAjD,SACXF,eAAA,QAAMxC,UAAU,kBAAiB0C,SAAA,CAC9BC,cAAA,KAAG3C,UAAU,4BACb2C,cAAC0B,IAAY,CAACZ,GAAG,mCAKhC,C","file":"static/js/79.b6beaf04.chunk.js","sourcesContent":["import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nvar _excluded = [\"className\", \"cssModule\", \"size\", \"bordered\", \"borderless\", \"striped\", \"dark\", \"hover\", \"responsive\", \"tag\", \"responsiveTag\", \"innerRef\"];\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { mapToCssModules, tagPropType } from './utils';\nvar propTypes = {\n  className: PropTypes.string,\n  cssModule: PropTypes.object,\n  size: PropTypes.string,\n  bordered: PropTypes.bool,\n  borderless: PropTypes.bool,\n  striped: PropTypes.bool,\n  dark: PropTypes.bool,\n  hover: PropTypes.bool,\n  responsive: PropTypes.oneOfType([PropTypes.bool, PropTypes.string]),\n  tag: tagPropType,\n  responsiveTag: tagPropType,\n  innerRef: PropTypes.oneOfType([PropTypes.func, PropTypes.string, PropTypes.object])\n};\nvar defaultProps = {\n  tag: 'table',\n  responsiveTag: 'div'\n};\n\nvar Table = function Table(props) {\n  var className = props.className,\n      cssModule = props.cssModule,\n      size = props.size,\n      bordered = props.bordered,\n      borderless = props.borderless,\n      striped = props.striped,\n      dark = props.dark,\n      hover = props.hover,\n      responsive = props.responsive,\n      Tag = props.tag,\n      ResponsiveTag = props.responsiveTag,\n      innerRef = props.innerRef,\n      attributes = _objectWithoutPropertiesLoose(props, _excluded);\n\n  var classes = mapToCssModules(classNames(className, 'table', size ? 'table-' + size : false, bordered ? 'table-bordered' : false, borderless ? 'table-borderless' : false, striped ? 'table-striped' : false, dark ? 'table-dark' : false, hover ? 'table-hover' : false), cssModule);\n  var table = /*#__PURE__*/React.createElement(Tag, _extends({}, attributes, {\n    ref: innerRef,\n    className: classes\n  }));\n\n  if (responsive) {\n    var responsiveClassName = mapToCssModules(responsive === true ? 'table-responsive' : \"table-responsive-\" + responsive, cssModule);\n    return /*#__PURE__*/React.createElement(ResponsiveTag, {\n      className: responsiveClassName\n    }, table);\n  }\n\n  return table;\n};\n\nTable.propTypes = propTypes;\nTable.defaultProps = defaultProps;\nexport default Table;","/**\n * Project Management Widget\n */\n\nimport React, { useState, Fragment, useEffect } from 'react';\nimport { Progress, Table, Collapse } from 'reactstrap';\nimport Avatar from '@material-ui/core/Avatar';\nimport IconButton from '@material-ui/core/IconButton';\nimport { Scrollbars } from 'react-custom-scrollbars';\nimport Tooltip from '@material-ui/core/Tooltip';\n\n// api\nimport api from 'Api';\n\n// card component\nimport { RctCardFooter } from 'Components/RctCard';\n\n// rct section loader\nimport RctSectionLoader from 'Components/RctSectionLoader/RctSectionLoader';\n\n//Helper\nimport { getTheDate } from 'Helpers/helpers';\n\n// intl messages\nimport IntlMessages from 'Util/IntlMessages';\n\nfunction ProjectItem(props) {\n   const [collapse, setCollapse] = useState(false);\n\t\n\t//On collapse project description\n\tconst OnCollapseProject = () => {\n      setCollapse(!collapse);\n\t}\n\n   const { data } = props;\n   return (\n      <Fragment>\n         <tr>\n            <td>{data.name}</td>\n            <td>{getTheDate(data.date, 'DD MMM YYYY')}</td>\n            <td>\n               <Progress color={data.progress.color} className=\"mt-10 w-90\" value={data.progress.value} />\n               <p className=\"mb-0 fs-12 text-muted\">{data.status}</p>\n            </td>\n            <td className=\"d-flex justify-content-between\">\n               <div className=\"team-avatar w-100\">\n                  <ul className=\"mb-0 list-inline\">\n                     {data.team.map((member, subkey) => (\n                        <li className=\"list-inline-item\" key={subkey}>\n                           <Tooltip id=\"tooltip-top\" title={member.name} placement=\"top\">\n                              <Avatar alt=\"user 4\" src={member.avatar} className=\"rounded-circle\" />\n                           </Tooltip>\n                        </li>\n                     ))}\n                  </ul>\n               </div>\n               <IconButton onClick={() => OnCollapseProject()}>\n                  {collapse ?\n                     <i className=\"material-icons\">remove_circle</i>\n                     :\n                     <i className=\"material-icons\">add_circle</i>\n                  }\n               </IconButton>\n            </td>\n         </tr>\n         {collapse &&\n            <tr>\n               <td colSpan=\"4\">\n                  <Collapse isOpen={collapse}>\n                     <div className=\"p-10\">\n                        <h6><IntlMessages id=\"widgets.description\" /></h6>\n                        <p>{data.description}</p>\n                     </div>\n                  </Collapse>\n               </td>\n            </tr>\n         }\n      </Fragment>\n   )\n}\n\nfunction ProjectManagement() {\n   const [projectListData, setProjectListData] = useState(null);\n   const [sectionReload, setSectionReload] = useState(false);\n\t\n\tuseEffect(() => {\n\t\tgetProjectData();\n\t},[])\n\n\t// Project Data\n\n\tconst getProjectData =()=>  {\n      setSectionReload(true);\n\t\tapi.get('ProjectData.js')\n\t\t\t.then((response) => {\n            setProjectListData(response.data)\n            setSectionReload(false);\n\t\t\t}).catch(error => {\n            setProjectListData(null)\n            setSectionReload(false);\n\t\t\t})\n\t}\n\n   return (\n      <div className=\"project-managemnet-wrapper\">\n         {sectionReload &&\n            <RctSectionLoader />\n         }\n         <Scrollbars className=\"rct-scroll\" autoHeight autoHeightMin={100} autoHeightMax={620} autoHide>\n            <Table hover className=\"mb-0\" responsive>\n               <thead>\n                  <tr>\n                     <th><IntlMessages id=\"components.projectName\" /></th>\n                     <th><IntlMessages id=\"widgets.deadline\" /></th>\n                     <th><IntlMessages id=\"widgets.status\" /></th>\n                     <th><IntlMessages id=\"widgets.team\" /></th>\n                  </tr>\n               </thead>\n               <tbody>\n                  {projectListData && projectListData.map((data, key) => (\n                     <ProjectItem\n                        key={key}\n                        data={data}\n                     />\n                  ))}\n               </tbody>\n            </Table>\n         </Scrollbars>\n         <RctCardFooter>\n            <span className=\"fs-12 text-base\">\n               <i className=\"mr-15 zmdi zmdi-refresh\"></i>\n               <IntlMessages id=\"widgets.updated10Minago\" />\n            </span>\n         </RctCardFooter>\n      </div>\n   )\n}\n\nexport default ProjectManagement"],"sourceRoot":""}